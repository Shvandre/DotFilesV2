{"version":3,"file":"static/js/927.b24218b8.chunk.js","mappings":"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","sources":["view/screen/connections/api.ts","view/screen/home/wallet/receive/Receive.tsx","libs/address.ts","view/components/ConnectBadge.tsx","view/components/Tabs.tsx","view/components/BalanceButton.tsx","view/screen/home/wallet/Fiat.tsx","view/screen/home/wallet/WalletBalance.tsx","view/screen/home/wallet/WalletMenu.tsx","view/screen/home/wallet/WalletName.tsx","view/components/ActivitiesList.tsx","view/screen/home/wallet/activities/api.ts","view/screen/home/wallet/activities/Activities.tsx","view/components/Asset.tsx","view/screen/home/wallet/assets/api.ts","view/screen/home/wallet/assets/AssetsList.tsx","view/screen/home/wallet/Wallet.tsx","view/screen/home/wallet/assets/import/Tabs.tsx","view/screen/home/wallet/assets/import/Jetton.tsx","view/screen/home/wallet/assets/import/Nft.tsx","view/screen/home/wallet/receive/Icons.tsx","view/screen/home/wallet/setttings/route.ts","view/screen/home/wallet/assets/jetton/context.ts","view/screen/home/wallet/assets/jetton/JettonHide.tsx","view/screen/home/wallet/assets/jetton/api.ts","view/screen/home/wallet/assets/jetton/JettonBalance.tsx","view/screen/home/wallet/assets/jetton/JettonHome.tsx","view/components/send/SendButtons.tsx","view/components/send/SendLoadingView.tsx","view/components/send/SendSuccessView.tsx","view/screen/home/wallet/assets/jetton/send/api.ts","view/screen/home/wallet/assets/jetton/send/SendJettonConfirm.tsx","view/screen/home/wallet/assets/jetton/send/SendJetton.tsx","view/screen/home/wallet/assets/jetton/Jetton.tsx","view/screen/home/wallet/assets/nft/context.tsx","view/screen/home/wallet/assets/nft/api.ts","view/screen/home/wallet/assets/nft/NftHide.tsx","view/screen/home/wallet/assets/nft/NftHome.tsx","view/screen/home/wallet/assets/nft/NftList.tsx","view/screen/home/wallet/assets/nft/send/api.ts","view/screen/home/wallet/assets/nft/send/SendNftConfirm.tsx","view/screen/home/wallet/assets/nft/send/SendNft.tsx","view/screen/home/wallet/assets/nft/Nft.tsx","view/screen/home/wallet/assets/Assets.tsx","view/screen/home/wallet/receive/Swap.tsx","view/screen/home/wallet/send/ConfirmView.tsx","view/screen/home/wallet/send/Send.tsx","view/screen/home/wallet/setttings/api.ts","view/screen/home/wallet/setttings/LedgerSettings.tsx","view/screen/home/wallet/setttings/Settings.tsx","view/screen/home/Home.tsx"],"sourcesContent":["import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\nimport {\n  Connections,\n  defaultConnections,\n} from \"../../../libs/entries/connection\";\nimport { revokeDAppAccess } from \"../../../libs/state/connectionSerivce\";\nimport {\n  getNetworkStoreValue,\n  QueryType,\n  setConnections,\n} from \"../../../libs/store/browserStore\";\nimport { NetworkContext } from \"../../context\";\n\nexport const useConnections = () => {\n  const network = useContext(NetworkContext);\n  return useQuery([network, QueryType.connection], () =>\n    getNetworkStoreValue<Connections>(\n      QueryType.connection,\n      defaultConnections,\n      network\n    )\n  );\n};\n\ntype Params = {\n  origin: string;\n  wallet: string;\n};\nexport const useDisconnectMutation = (connections: Connections | undefined) => {\n  const network = useContext(NetworkContext);\n  const client = useQueryClient();\n  return useMutation<void, Error, Params>(async ({ origin, wallet }) => {\n    if (!connections) return;\n\n    connections = revokeDAppAccess(connections, origin, wallet);\n\n    await setConnections(connections, network);\n    client.invalidateQueries([network, QueryType.connection]);\n  });\n};\n","import { Address, formatTransferUrl } from \"@openproduct/web-sdk\";\nimport { FC, useContext } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ExtensionPlatform from \"../../../../../libs/service/extension\";\nimport {\n  ButtonColumn,\n  ButtonNegative,\n  Container,\n  H1,\n  H3,\n  Text,\n} from \"../../../../components/Components\";\nimport { HomeButton } from \"../../../../components/HomeButton\";\nimport {\n  CheckIcon,\n  CopyIcon,\n  LinkIcon,\n  TonIcon,\n} from \"../../../../components/Icons\";\nimport {\n  NetworkContext,\n  WalletAddressContext,\n  WalletStateContext,\n} from \"../../../../context\";\nimport { useCopyToClipboard } from \"../../../../hooks/useCopyToClipbpard\";\nimport { StealthEX } from \"./Icons\";\n\nconst Body = styled(Container)`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nenum ReceiveRoutes {\n  index = \"/\",\n  ton = \"/ton\",\n}\n\nconst Source = styled.div`\n  border-bottom: 1px solid ${(props) => props.theme.darkGray};\n  margin-bottom: 1rem;\n  padding-bottom: 1rem;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  padding-bottom: 0.5rem;\n`;\n\nconst SubTitle = styled(H3)`\n  margin: 0;\n`;\n\nconst NetworkLogo = styled.span`\n  font-size: 2em;\n`;\n\nconst ChangeHero = styled.div`\n  background: #2f92f6;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nconst ReceiveIndex = () => {\n  const navigate = useNavigate();\n  const wallet = useContext(WalletStateContext);\n  const network = useContext(NetworkContext);\n  const address = new Address(wallet.address).toString(true, true, true);\n  return (\n    <div>\n      <Source>\n        <Row>\n          <StealthEX />\n          <SubTitle>StealthEX</SubTitle>\n        </Row>\n        <Text>\n          StealthEX is an instant cryptocurrency exchange for limitless swaps.\n          Service is free from registration and does not store user’s funds on\n          the platform.\n        </Text>\n        <ButtonNegative\n          title={network != \"mainnet\" ? \"Please switch to mainnet!\" : undefined}\n          disabled={network != \"mainnet\"}\n          onClick={() =>\n            ExtensionPlatform.openTab({\n              url: `https://stealthex.io/?ref=${process.env.REACT_APP_STEALTHEX_ID}&from=usd&to=ton`,\n            })\n          }\n        >\n          Continue to StealthEX <LinkIcon />\n        </ButtonNegative>\n      </Source>\n      <Source>\n        <Row>\n          <ChangeHero>\n            <img\n              src=\"https://pretty-picture.s3.eu-central-1.amazonaws.com/logo_bf4f0a8ce6.svg\"\n              height=\"30\"\n            />\n          </ChangeHero>\n        </Row>\n        <Text>\n          ChangeHero is an instant cryptocurrency exchange, cross-chain swap\n          service. Instantly Convert Bitcoin And Over 150 Popular Cryptos.\n        </Text>\n        <ButtonNegative\n          title={network != \"mainnet\" ? \"Please switch to mainnet!\" : undefined}\n          disabled={network != \"mainnet\"}\n          onClick={() =>\n            ExtensionPlatform.openTab({\n              url: `https://changehero.io/?ref=${process.env.REACT_APP_CHANGEHERO}&cur_to=ION `,\n            })\n          }\n        >\n          Continue to ChangeHero <LinkIcon />\n        </ButtonNegative>\n      </Source>\n      <Source>\n        <Row>\n          <NetworkLogo>\n              <img src=\"ion-logo.svg\" alt=\"ION\" width={40} height={40}/>\n          </NetworkLogo>\n            <SubTitle>Directly deposit ION</SubTitle>\n        </Row>\n        <Text>\n          If you already have some ION, the quickest way to get ION in your new\n          wallet by direct deposit.\n        </Text>\n        <ButtonNegative onClick={() => navigate(`.${ReceiveRoutes.ton}`)}>\n          Receive ION\n        </ButtonNegative>\n      </Source>\n    </div>\n  );\n};\n\nconst TextRow = styled.div`\n  color: ${(props) => props.theme.darkGray};\n`;\n\nconst AddressRow = styled.div`\n  cursor: pointer;\n  font-size: large;\n  width: 100%;\n  word-break: break-all;\n`;\n\nconst Block = styled.div`\n  padding: ${(props) => props.theme.padding} 0;\n  margin: 0 auto;\n`;\n\ninterface ReceiveProps {\n  symbol?: string;\n}\n\nconst Title = styled(H1)`\n  margin: 0;\n`;\n\nexport const ReceiveCoin: FC<ReceiveProps> = ({ symbol = \"ION\" }) => {\n  const address = useContext(WalletAddressContext);\n  const [copied, handleCopy] = useCopyToClipboard();\n\n  return (\n    <ButtonColumn>\n      <Title>Receive {symbol}</Title>\n      {symbol === \"ION\" && (\n        <Block>\n          <QRCode size={160} value={formatTransferUrl(address)} />\n        </Block>\n      )}\n      <TextRow>\n        Share this address to receive {symbol} in Ice Open Network\n      </TextRow>\n      <AddressRow onClick={() => handleCopy(address)}>{address}</AddressRow>\n      <ButtonNegative onClick={() => handleCopy(address)}>\n        Copy {copied ? <CheckIcon /> : <CopyIcon />}\n      </ButtonNegative>\n    </ButtonColumn>\n  );\n};\n\nexport const ReceiveTonPage = () => {\n  return (\n    <>\n      <HomeButton />\n      <Body>\n        <ReceiveCoin />\n      </Body>\n    </>\n  );\n};\n\nexport const ReceiveRouter = () => {\n  return (\n    <>\n      <HomeButton />\n      <Body>\n        <Routes>\n          <Route path={ReceiveRoutes.ton} element={<ReceiveCoin />} />\n          <Route path={ReceiveRoutes.index} element={<ReceiveIndex />} />\n        </Routes>\n      </Body>\n    </>\n  );\n};\n","import { Address } from \"@ton/core\";\nimport { useMemo } from \"react\";\nimport { useNetwork } from \"../view/api\";\n\nexport const useNonBounceableAddress = (address: string) => {\n  const { data: network } = useNetwork();\n  return useMemo(() => {\n    return Address.parse(address).toString({\n      urlSafe: true,\n      bounceable: false,\n      testOnly: network == \"testnet\",\n    });\n  }, [network, address]);\n};\n","import { useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport { AppRoute } from \"../routes\";\nimport { useConnections } from \"../screen/connections/api\";\nimport { useActiveTabs } from \"../screen/notifications/connect/api\";\nimport { Badge } from \"./Components\";\n\nconst Connect = styled(Badge)`\n  position: absolute;\n  left: ${(props) => props.theme.padding};\n  padding: 5px 8px;\n  font-size: smaller;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst Dot = styled.div<{ isConnected: boolean }>`\nwidth: 5px;\nheight: 5px;\nborder-radius: 50%;\n\n${(props) =>\n  props.isConnected\n    ? css`\n        background: green;\n      `\n    : css`\n        background: red;\n      `}}\n`;\n\nexport const ConnectBadge = () => {\n  const navigate = useNavigate();\n\n  const { data: connections } = useConnections();\n  const { data: tab } = useActiveTabs();\n\n  const isConnected = useMemo(() => {\n    if (!connections || !tab || !tab.url) return false;\n    const url = new URL(tab.url);\n    return connections[url.origin] != null;\n  }, [connections, tab]);\n\n  return (\n    <Connect onClick={() => navigate(AppRoute.connections)}>\n      {isConnected ? (\n        <>\n          <Dot isConnected />\n          <span>Connected</span>\n        </>\n      ) : (\n        <>Not Connected</>\n      )}\n    </Connect>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst Block = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n\nconst Item = styled.div<{ active: boolean }>`\nflex-grow: 1;\npadding: 10px 0;\nborder-bottom: 2px solid ${(props) => props.theme.lightGray};\ncursor: pointer;\ntext-align: center;\nfont-size: large;\n\n${(props) =>\n  props.active &&\n  css`\n    border-bottom: 2px solid ${(props) => props.theme.blue};\n  `}}\n`;\n\ninterface TabsProps {\n  options: string[];\n  active: string;\n  onChange: (value: string) => void;\n}\n\nexport const Tabs: FC<TabsProps> = React.memo(\n  ({ options, active, onChange }) => {\n    return (\n      <Block>\n        {options.map((item) => (\n          <Item\n            key={item}\n            active={item === active}\n            onClick={() => onChange(item)}\n          >\n            {item}\n          </Item>\n        ))}\n      </Block>\n    );\n  }\n);\n","import { FC, PropsWithChildren } from \"react\";\nimport styled from \"styled-components\";\nimport { Container, Icon } from \"./Components\";\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  align-items: center;\n  cursor: pointer;\n  width: 45px;\n`;\n\nconst Text = styled.span`\n  font-size: larger;\n`;\n\nconst ActionIcon = styled(Icon)`\n  background: ${(props) => props.theme.blue};\n  color: ${(props) => props.theme.background};\n`;\n\nexport const BallanceBlock = styled(Container)`\n  flex-shrink: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const BallanceButtonRow = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport interface BallanceButtonProps extends PropsWithChildren {\n  label: string;\n  onClick: () => void;\n}\nexport const BallanceButton: FC<BallanceButtonProps> = ({\n  onClick,\n  label,\n  children,\n}) => {\n  return (\n    <Column onClick={onClick}>\n      <ActionIcon>{children}</ActionIcon>\n      <Text>{label}</Text>\n    </Column>\n  );\n};\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { useTonFiat } from \"../../../utils\";\n\nconst Price = styled.span`\n  margin: 0 0 20px;\n  font-size: large;\n  font-weight: bold;\n  color: ${(props) => props.theme.lightColor};\n`;\n\nexport const Fiat: FC<{ balance?: string; price?: number }> = ({\n  balance,\n  price,\n}) => {\n  const value = useTonFiat(balance, price);\n  return <Price>{value ?? \"-\"}</Price>;\n};\n","import {FC, useMemo} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {BallanceButton, BallanceButtonRow,} from \"../../../components/BalanceButton\";\nimport {Container} from \"../../../components/Components\";\nimport {BuyIcon, ReceiveIcon, SendIcon, SwapIcon,} from \"../../../components/Icons\";\nimport {AppRoute} from \"../../../routes\";\nimport {formatTonValue} from \"../../../utils\";\nimport {Fiat} from \"./Fiat\";\n\nconst Block = styled(Container)`\n    flex-shrink: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst NetworkLogo = styled.span`\n    font-size: 3em;\n`;\n\nconst Amount = styled.span`\n    margin: ${(props) => props.theme.padding} 0 5px;\n    font-size: xx-large;\n`;\n\nexport interface BalanceProps {\n    balance?: string;\n    price?: number;\n}\n\nexport const Balance: FC<BalanceProps> = ({balance, price}) => {\n    const navigate = useNavigate();\n\n    const formatted = useMemo(() => {\n        return balance ? formatTonValue(balance) : \"-\";\n    }, [balance]);\n\n    const dontRender = false;\n\n    return (\n        <Block>\n            <NetworkLogo>\n                <img src=\"ion-logo.svg\" alt=\"ION\" width={40} height={40}/>\n            </NetworkLogo>\n            <Amount>{formatted} ION</Amount>\n            <Fiat balance={balance} price={price}/>\n            <BallanceButtonRow>\n                {dontRender && (\n                    <BallanceButton label=\"Buy\" onClick={() => navigate(AppRoute.buy)}>\n                        <BuyIcon/>\n                    </BallanceButton>\n                )}\n                <BallanceButton\n                    label=\"Receive\"\n                    onClick={() => navigate(AppRoute.receive)}\n                >\n                    <ReceiveIcon/>\n                </BallanceButton>\n                <BallanceButton label=\"Send\" onClick={() => navigate(AppRoute.send)}>\n                    <SendIcon/>\n                </BallanceButton>\n                {dontRender && (\n                    <BallanceButton label=\"Swap\" onClick={() => navigate(AppRoute.swap)}>\n                        <SwapIcon/>\n                    </BallanceButton>\n                )}\n            </BallanceButtonRow>\n        </Block>\n    );\n};\n","import React, { FC } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ExtensionPlatform from \"../../../../libs/service/extension\";\nimport { Icon } from \"../../../components/Components\";\nimport {\n  DropDown,\n  DropDownListPayload,\n  ListItem,\n} from \"../../../components/DropDown\";\nimport { LinkIcon, MoreIcon } from \"../../../components/Icons\";\nimport { AppRoute } from \"../../../routes\";\nimport { useSelectedNetworkConfig } from \"../api\";\n\nconst Menu = styled.div`\n  position: absolute;\n  right: ${(props) => props.theme.padding};\n`;\n\nexport const WalletMenu: FC<{ address: string }> = React.memo(({ address }) => {\n  const navigate = useNavigate();\n  const config = useSelectedNetworkConfig();\n  const location = useLocation();\n\n  return (\n    <Menu>\n      <DropDown\n        payload={(onClose) => {\n          return (\n            <DropDownListPayload>\n              <ListItem\n                onClick={() => {\n                  onClose();\n                  ExtensionPlatform.openTab({\n                    url: `${config.scanUrl}${address}`,\n                  });\n                }}\n              >\n                Open Wallet in explorer <LinkIcon />\n              </ListItem>\n              <ListItem\n                onClick={() => {\n                  onClose();\n                  ExtensionPlatform.openExtensionInBrowser(\n                    location.pathname,\n                    location.search\n                  );\n                }}\n              >\n                Expand view <LinkIcon />\n              </ListItem>\n\n              <ListItem\n                onClick={() => {\n                  onClose();\n                  navigate(AppRoute.connections);\n                }}\n              >\n                Connected sites\n              </ListItem>\n              <ListItem\n                onClick={() => {\n                  onClose();\n                  navigate(AppRoute.wallet);\n                }}\n              >\n                Wallet Settings\n              </ListItem>\n            </DropDownListPayload>\n          );\n        }}\n      >\n        <Icon>\n          <MoreIcon />\n        </Icon>\n      </DropDown>\n    </Menu>\n  );\n});\n","import React, { FC } from \"react\";\nimport styled from \"styled-components\";\nimport { CheckIcon, CopyIcon } from \"../../../components/Icons\";\nimport { useCopyToClipboard } from \"../../../hooks/useCopyToClipbpard\";\nimport { toShortAddress } from \"../../../utils\";\n\nconst Block = styled.div`\n  cursor: pointer;\n  border-radius: 5px;\n  text-align: center;\n  padding: 5px 15px;\n  line-height: 1.6;\n  max-width: 140px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:hover {\n    background: ${(props) => props.theme.gray};\n  }\n`;\n\nexport const WalletName: FC<{ address: string; name?: string }> = React.memo(\n  ({ address, name }) => {\n    const [copied, handleCopy] = useCopyToClipboard();\n\n    return (\n      <Block onClick={() => handleCopy(address)}>\n        <b>{name}</b>\n        <div>\n          {toShortAddress(address)} {copied ? <CheckIcon /> : <CopyIcon />}\n        </div>\n      </Block>\n    );\n  }\n);\n","import { base64ToBytes } from \"@openproduct/web-sdk\";\nimport React, { FC, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useNonBounceableAddress } from \"../../libs/address\";\nimport {\n  TonWebTransaction,\n  TonWebTransactionMessage,\n  TonWebTransactionOutMessage,\n} from \"../../libs/entries/transaction\";\nimport ExtensionPlatform from \"../../libs/service/extension\";\nimport { useSelectedNetworkConfig } from \"../screen/home/api\";\nimport { formatTonValue, toShortAddress } from \"../utils\";\nimport { ButtonLink } from \"./Components\";\nimport { LinkIcon, ReceiveIcon, SendIcon } from \"./Icons\";\n\nconst Row = styled.div`\n  padding: ${(props) => props.theme.padding};\n`;\n\nconst Block = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  border-bottom: 2px solid ${(props) => props.theme.gray};\n`;\n\nconst Image = styled.div`\n  shrink: 0;\n  padding: ${(props) => props.theme.padding};\n  display: flex;\n  align-items: center;\n`;\n\nconst First = styled(Image)`\n  color: ${(props) => props.theme.darkGray};\n  font-size: 200%;\n`;\nconst Text = styled.div`\n  flex-grow: 1;\n  padding: ${(props) => props.theme.padding};\n  display: flex;\n  justify-content: center;\n  line-height: 1.5;\n  flex-direction: column;\n`;\n\nconst Line = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const ActivityMessage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 50px;\n  border-bottom: 2px solid ${(props) => props.theme.gray};\n`;\n\nconst CommentLabel = styled.div`\n  margin-bottom: 5px;\n  color: ${(props) => props.theme.darkGray};\n  font-weight: bold;\n  font-size: 0.75rem;\n`;\n\nconst Comment = styled.div`\n  margin-top: ${(props) => props.theme.padding};\n  padding: 5px 10px;\n  background: ${(props) => props.theme.lightGray};\n  font-size: medium;\n  word-break: break-all;\n`;\n\nconst decodeText = (value: string): string => {\n  return new TextDecoder().decode(base64ToBytes(value));\n};\n\nconst CommentBlock: FC<{ msg: TonWebTransactionMessage }> = ({ msg }) => {\n  const [hasComment, encrypted, value] = useMemo(() => {\n    if (\n      \"openmask_decrypted_payload\" in msg.msg_data &&\n      msg.msg_data.openmask_decrypted_payload\n    ) {\n      return [\n        true,\n        true,\n        decodeText(msg.msg_data.openmask_decrypted_payload),\n      ] as const;\n    }\n    if (msg.msg_data[\"@type\"] === \"msg.dataText\") {\n      return [true, false, decodeText(msg.msg_data.text)] as const;\n    }\n    return [false, false, \"\"] as const;\n  }, [msg]);\n\n  if (!hasComment) return <></>;\n\n  if (encrypted) {\n    return (\n      <Comment>\n        <CommentLabel>E2E encrypted message</CommentLabel>\n        {value}\n      </Comment>\n    );\n  } else {\n    return <Comment>{value}</Comment>;\n  }\n};\n\nconst TransactionOut: FC<{\n  item: TonWebTransaction;\n  out: TonWebTransactionOutMessage;\n}> = ({ item, out }) => {\n  const address = useNonBounceableAddress(out.destination);\n  return (\n    <Block key={out.body_hash}>\n      <First>\n        <SendIcon />\n      </First>\n      <Text>\n        <Line>\n          <b>Send</b>\n          <span>-{formatTonValue(out.value)} ION</span>\n        </Line>\n        <Line>\n          <span>{toShortAddress(address)}</span>\n          <span>{new Date(item.utime * 1000).toLocaleString()}</span>\n        </Line>\n        <CommentBlock msg={out} />\n      </Text>\n    </Block>\n  );\n};\n\nconst TransactionIn: FC<{\n  item: TonWebTransaction;\n}> = ({ item }) => {\n  const address = useNonBounceableAddress(item.in_msg.source);\n\n  return (\n    <Block>\n      <First>\n        <ReceiveIcon />\n      </First>\n      <Text>\n        <Line>\n          <b>Receive</b>\n          <span>+{formatTonValue(item.in_msg.value)} ION</span>\n        </Line>\n        <Line>\n          <span>{toShortAddress(address)}</span>\n          <span>{new Date(item.utime * 1000).toLocaleString()}</span>\n        </Line>\n        <CommentBlock msg={item.in_msg} />\n      </Text>\n    </Block>\n  );\n};\n\nconst Transaction: FC<{ item: TonWebTransaction }> = React.memo(({ item }) => {\n  return (\n    <>\n      {item.out_msgs.map((out) => (\n        <TransactionOut key={out.body_hash} item={item} out={out} />\n      ))}\n      {item.in_msg && item.in_msg.source && <TransactionIn item={item} />}\n    </>\n  );\n});\n\nexport interface ActivitiesProps {\n  isLoading: boolean;\n  address?: string;\n  data?: TonWebTransaction[];\n}\n\nexport const ActivitiesList: FC<ActivitiesProps> = ({\n  isLoading,\n  data,\n  address,\n}) => {\n  const config = useSelectedNetworkConfig();\n\n  return (\n    <>\n      {isLoading && <ActivityMessage>Loading...</ActivityMessage>}\n      {data?.map((item) => (\n        <Transaction key={item.transaction_id.hash} item={item} />\n      ))}\n      {address && (\n        <Row>\n          <ButtonLink\n            onClick={() =>\n              ExtensionPlatform.openTab({\n                url: `${config.scanUrl}${address}`,\n              })\n            }\n          >\n            View more in explorer <LinkIcon />\n          </ButtonLink>\n        </Row>\n      )}\n    </>\n  );\n};\n","import { getSharedSecret } from \"@noble/ed25519\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { Cell } from \"@ton/core\";\nimport { TonClient } from \"@ton/ton\";\nimport { useContext } from \"react\";\nimport { KeyPair } from \"tonweb-mnemonic/dist/types\";\nimport nacl from \"tweetnacl\";\nimport { encodeBase64 } from \"tweetnacl-util\";\nimport {\n  TonWebTransaction,\n  TonWebTransactionInMessage,\n  TonWebTransactionOutMessage,\n} from \"../../../../../libs/entries/transaction\";\nimport { getWalletPublicKey } from \"../../../../../libs/service/transfer/payload\";\nimport { QueryType } from \"../../../../../libs/store/browserStore\";\nimport {\n  NetworkContext,\n  TonClientContext,\n  TonProviderContext,\n  WalletStateContext,\n} from \"../../../../context\";\nimport { useDecryptAnalytics } from \"../../../Analytics\";\nimport { getWalletKeyPair } from \"../../../api\";\n\nconst decryptMessageV1 = (cell: Cell, sharedKey: Uint8Array) => {\n  const slice = cell.beginParse();\n  const buffer = slice.loadBuffer(slice.remainingBits / 8);\n\n  return decryptMessage(buffer, sharedKey);\n};\n\nconst decryptMessage = (buffer: Buffer, sharedKey: Uint8Array) => {\n  if (buffer.length <= nacl.box.nonceLength) {\n    return undefined;\n  }\n\n  const nonce = buffer.slice(0, nacl.box.nonceLength);\n  const message = buffer.slice(nacl.box.nonceLength, buffer.length);\n\n  const decrypted = nacl.box.open.after(\n    new Uint8Array(message),\n    new Uint8Array(nonce),\n    sharedKey\n  );\n\n  return decrypted ? encodeBase64(decrypted) : undefined;\n};\n\nconst decryptOutMessage = async (\n  client: TonClient,\n  keyPair: KeyPair,\n  outMessage: TonWebTransactionOutMessage,\n  track: (king: \"v1\" | \"standard\") => void\n): Promise<TonWebTransactionOutMessage> => {\n  const senderPublicKey = await getWalletPublicKey(\n    client,\n    outMessage.destination\n  );\n  const sharedKey = await getSharedSecret(\n    Buffer.from(keyPair.secretKey.slice(0, 32)).toString(\"hex\"),\n    senderPublicKey\n  );\n\n  if (outMessage.msg_data[\"@type\"] === \"msg.dataEncryptedText\") {\n    const openmask_decrypted_payload = decryptMessage(\n      Buffer.from(outMessage.msg_data.text, \"base64\"),\n      sharedKey\n    );\n    if (openmask_decrypted_payload) {\n      track(\"standard\");\n    }\n\n    return {\n      ...outMessage,\n      msg_data: {\n        ...outMessage.msg_data,\n        openmask_decrypted_payload,\n      },\n    };\n  }\n  if (outMessage.msg_data[\"@type\"] === \"msg.dataRaw\") {\n    const openmask_decrypted_payload = decryptMessageV1(\n      Cell.fromBase64(outMessage.msg_data.body),\n      sharedKey\n    );\n    if (openmask_decrypted_payload) {\n      track(\"v1\");\n    }\n    return {\n      ...outMessage,\n      msg_data: {\n        ...outMessage.msg_data,\n        openmask_decrypted_payload,\n      },\n    };\n  }\n  return outMessage;\n};\n\nconst decryptInMessage = async (\n  client: TonClient,\n  keyPair: KeyPair,\n  inMessage: TonWebTransactionInMessage,\n  track: (king: \"v1\" | \"standard\") => void\n): Promise<TonWebTransactionInMessage> => {\n  if (!inMessage.source || inMessage.msg_data[\"@type\"] === \"msg.dataText\") {\n    return inMessage;\n  }\n\n  const senderPublicKey = await getWalletPublicKey(client, inMessage.source);\n  const sharedKey = await getSharedSecret(\n    Buffer.from(keyPair.secretKey.slice(0, 32)).toString(\"hex\"),\n    senderPublicKey\n  );\n\n  if (inMessage.msg_data[\"@type\"] === \"msg.dataEncryptedText\") {\n    const openmask_decrypted_payload = decryptMessage(\n      Buffer.from(inMessage.msg_data.text, \"base64\"),\n      sharedKey\n    );\n    if (openmask_decrypted_payload) {\n      track(\"standard\");\n    }\n    return {\n      ...inMessage,\n      msg_data: {\n        ...inMessage.msg_data,\n        openmask_decrypted_payload,\n      },\n    };\n  }\n  if (inMessage.msg_data[\"@type\"] === \"msg.dataRaw\") {\n    const openmask_decrypted_payload = decryptMessageV1(\n      Cell.fromBase64(inMessage.msg_data.body),\n      sharedKey\n    );\n    if (openmask_decrypted_payload) {\n      track(\"v1\");\n    }\n\n    return {\n      ...inMessage,\n      msg_data: {\n        ...inMessage.msg_data,\n        openmask_decrypted_payload,\n      },\n    };\n  }\n\n  return inMessage;\n};\n\nconst tryToDecrypt = async (\n  client: TonClient,\n  keyPair: KeyPair,\n  transaction: TonWebTransaction,\n  track: (king: \"v1\" | \"standard\") => void\n): Promise<TonWebTransaction> => {\n  const decryptedOutMessages = await Promise.all(\n    transaction.out_msgs.map((outMessage) =>\n      decryptOutMessage(client, keyPair, outMessage, track).catch(\n        () => outMessage\n      )\n    )\n  );\n\n  const inMessage = await decryptInMessage(\n    client,\n    keyPair,\n    transaction.in_msg,\n    track\n  ).catch(() => transaction.in_msg);\n\n  return {\n    ...transaction,\n    in_msg: inMessage,\n    out_msgs: decryptedOutMessages,\n  };\n};\n\nexport const useDecryptMutation = () => {\n  const client = useContext(TonClientContext);\n  const wallet = useContext(WalletStateContext);\n  const track = useDecryptAnalytics();\n\n  return useMutation<TonWebTransaction[], Error, TonWebTransaction[]>(\n    async (transactions) => {\n      const keyPair = await getWalletKeyPair(wallet);\n      const result = [] as TonWebTransaction[];\n\n      for (const transaction of transactions) {\n        if (transaction.out_msgs.length > 1) {\n          result.push(transaction);\n        } else {\n          try {\n            result.push(\n              await tryToDecrypt(client, keyPair, transaction, track)\n            );\n          } catch (e) {\n            result.push(transaction);\n          }\n        }\n      }\n      return result;\n    }\n  );\n};\n\nexport const useTransactions = (limit: number = 10) => {\n  const network = useContext(NetworkContext);\n  const wallet = useContext(WalletStateContext);\n  const ton = useContext(TonProviderContext);\n\n  return useQuery<TonWebTransaction[], Error>(\n    [network, wallet.address, QueryType.transactions],\n    () => ton.getTransactions(wallet.address, limit)\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TonWebTransaction } from \"../../../../../libs/entries/transaction\";\nimport { ActivitiesList } from \"../../../../components/ActivitiesList\";\nimport { ButtonNegative } from \"../../../../components/Components\";\nimport { Dots } from \"../../../../components/Dots\";\nimport { WalletStateContext } from \"../../../../context\";\nimport { FingerprintLabel } from \"../../../../FingerprintLabel\";\nimport { useDecryptMutation, useTransactions } from \"./api\";\n\nconst Row = styled.div`\n  padding: ${(props) => props.theme.padding};\n`;\n\nexport const Activities = () => {\n  const wallet = useContext(WalletStateContext);\n\n  const [txs, setTxs] = useState<TonWebTransaction[] | undefined>();\n  const { data: transactions, isLoading } = useTransactions();\n\n  useEffect(() => {\n    setTxs(transactions);\n  }, [transactions]);\n\n  const { mutateAsync, isLoading: isDecrypting } = useDecryptMutation();\n  const onDecrypt = async () => {\n    if (txs) {\n      setTxs(await mutateAsync(txs));\n    }\n  };\n\n  return (\n    <>\n      {!wallet.ledger && (\n        <Row>\n          <ButtonNegative onClick={onDecrypt}>\n            {isDecrypting ? (\n              <Dots>Decrypting</Dots>\n            ) : (\n              <FingerprintLabel>\n                Decrypt e2e encrypted messages\n              </FingerprintLabel>\n            )}\n          </ButtonNegative>\n        </Row>\n      )}\n\n      <ActivitiesList\n        isLoading={isLoading}\n        data={txs}\n        address={wallet.address}\n      />\n    </>\n  );\n};\n","import BigNumber from \"bignumber.js\";\nimport { FC, useMemo } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { AppStock } from \"../../libs/entries/stock\";\nimport { ipfsProxy } from \"../../libs/service/requestService\";\nimport { formatDecimals } from \"../../libs/state/decimalsService\";\nimport { balanceFormat, fiatFormat } from \"../utils\";\nimport { Gap } from \"./Components\";\nimport { ArrowForwardIcon, BaseLogoIcon } from \"./Icons\";\n\nexport interface AssetProps {\n  name: string;\n  logo?: React.ReactElement;\n  logoUrl?: string;\n  fiat?: string;\n  onShow?: () => void;\n  stocks?: AppStock[];\n}\n\nexport interface AssetJettonProps extends AssetProps {\n  decimals?: number;\n  balance?: string;\n  price?: number;\n}\n\nconst Block = styled.div<{ pointer: boolean }>`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  border-bottom: 2px solid ${(props) => props.theme.gray};\n  min-height: 100px;\n\n  ${(props) =>\n    props.pointer &&\n    css`\n      cursor: pointer;\n    `}\n`;\n\nconst ImageBlock = styled.div`\n  shrink: 0;\n  padding: ${(props) => props.theme.padding};\n  display: flex;\n  align-items: center;\n  color: ${(props) => props.theme.darkGray};\n`;\nconst ImageIcon = styled.div`\n  font-size: 3em;\n`;\n\nconst Text = styled.div`\n  grow: 1;\n  padding: ${(props) => props.theme.padding};\n  display: flex;\n  justify-content: center;\n  line-height: 1.5;\n  flex-direction: column;\n`;\n\nconst Balance = styled.div`\n  font-weight: bold;\n  font-size: large;\n\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n`;\n\nconst Fiat = styled.div`\n  color: ${(props) => props.theme.lightColor};\n`;\n\nconst Forward = styled.div`\n  display: flex;\n  height: 100%;\n  align-items: center;\n  cursor: pointer;\n  font-size: 200%;\n  padding: 0 30px 0 ${(props) => props.theme.padding};\n\n  &:hover {\n    color: ${(props) => props.theme.darkGray};\n  }\n`;\n\nconst Round = styled.img`\n  // border-radius: 50%;\n`;\n\nexport const AssetJettonView: FC<AssetJettonProps> = ({\n  name,\n  balance,\n  decimals,\n  price,\n  ...props\n}) => {\n  const [formatted, fiat] = useMemo(() => {\n    if (!balance) {\n      return [\"0\", undefined] as const;\n    }\n\n    const amount = new BigNumber(balance);\n\n    const formatted = balanceFormat.format(formatDecimals(amount, decimals));\n    let fiat: string | undefined = undefined;\n    if (price) {\n      fiat = fiatFormat.format(\n        formatDecimals(amount.multipliedBy(price), decimals)\n      );\n    }\n    return [formatted, fiat] as const;\n  }, [price, balance]);\n\n  return <AssetItemView name={`${formatted} ${name}`} fiat={fiat} {...props} />;\n};\n\nexport const AssetItemView: FC<AssetProps> = ({\n  name,\n  logo,\n  logoUrl,\n  fiat,\n  stocks,\n  onShow,\n}) => {\n  const fiatTitle = useMemo(() => {\n    return stocks && stocks[0] ? stocks[0].dex : undefined;\n  }, [stocks]);\n\n  return (\n    <Block pointer={onShow != null} onClick={onShow}>\n      <ImageBlock>\n        {logo ? (\n          <ImageIcon>{logo}</ImageIcon>\n        ) : logoUrl ? (\n          <Round\n            alt=\"Asset Logo\"\n            src={ipfsProxy(logoUrl)}\n            width=\"40px\"\n            height=\"40px\"\n          />\n        ) : (\n          <ImageIcon>\n            <BaseLogoIcon />\n          </ImageIcon>\n        )}\n      </ImageBlock>\n      <Text>\n        <Balance>{name}</Balance>\n        {fiat && <Fiat title={fiatTitle}>{fiat}</Fiat>}\n      </Text>\n      <Gap />\n      {onShow && (\n        <Forward>\n          <ArrowForwardIcon />\n        </Forward>\n      )}\n    </Block>\n  );\n};\n","import {\n  Address,\n  JettonMinterDao,\n  JettonWalletDao,\n  TonHttpProvider,\n} from \"@openproduct/web-sdk\";\nimport { QueryClient, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\nimport { AccountState } from \"../../../../../libs/entries/account\";\nimport { JettonAsset } from \"../../../../../libs/entries/asset\";\nimport {\n  getWalletAssets,\n  setWalletAssets,\n} from \"../../../../../libs/entries/wallet\";\nimport { QueryType } from \"../../../../../libs/store/browserStore\";\nimport {\n  AccountStateContext,\n  NetworkContext,\n  TonProviderContext,\n} from \"../../../../context\";\nimport { saveAccountState } from \"../../../api\";\n\nconst getJettonWalletAddress = async (\n  client: QueryClient,\n  network: string,\n  provider: TonHttpProvider,\n  jetton: JettonAsset,\n  account: AccountState\n): Promise<Address | null> => {\n  if (jetton.walletAddress) {\n    return new Address(jetton.walletAddress);\n  }\n\n  const minter = new JettonMinterDao(\n    provider,\n    new Address(jetton.minterAddress)\n  );\n\n  const { activeWallet } = account;\n  if (!activeWallet) {\n    throw new Error(\"Unexpected active wallet\");\n  }\n  const jettonWalletAddress = await minter.getJettonWalletAddress(\n    new Address(activeWallet)\n  );\n\n  if (jettonWalletAddress != null) {\n    // Update wallet jetton address in store\n    const value: AccountState = {\n      ...account,\n      wallets: account.wallets.map((wallet) => {\n        if (wallet.address === account.activeWallet) {\n          const assets = getWalletAssets(wallet).map((asset) => {\n            if (\n              \"minterAddress\" in asset &&\n              asset.minterAddress === jetton.minterAddress\n            ) {\n              return {\n                ...asset,\n                walletAddress: jettonWalletAddress.toString(true, true, true),\n              };\n            } else {\n              return asset;\n            }\n          });\n\n          return setWalletAssets(wallet, assets);\n        } else {\n          return wallet;\n        }\n      }),\n    };\n    await saveAccountState(network, client, value);\n  }\n\n  return jettonWalletAddress;\n};\n\nexport const useJettonWalletBalance = (jetton: JettonAsset) => {\n  const provider = useContext(TonProviderContext);\n  const account = useContext(AccountStateContext);\n  const network = useContext(NetworkContext);\n\n  const client = useQueryClient();\n  return useQuery(\n    [QueryType.jetton, jetton.minterAddress, account.activeWallet],\n    async () => {\n      const jettonWalletAddress = await getJettonWalletAddress(\n        client,\n        network,\n        provider,\n        jetton,\n        account\n      );\n\n      if (!jettonWalletAddress) {\n        throw new Error(\"Missing jetton wallet address.\");\n      }\n\n      const dao = new JettonWalletDao(provider, jettonWalletAddress);\n      const data = await dao.getData();\n      return data.balance.toString();\n    }\n  );\n};\n","import {Address} from \"@ton/core\";\nimport BigNumber from \"bignumber.js\";\nimport React, {FC, useContext, useEffect, useMemo} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../../../../package.json\";\nimport {JettonAsset, NftAsset} from \"../../../../../libs/entries/asset\";\nimport {AppStock, DexStocks} from \"../../../../../libs/entries/stock\";\nimport {getWalletAssets} from \"../../../../../libs/entries/wallet\";\nimport ExtensionPlatform from \"../../../../../libs/service/extension\";\nimport {seeIfJettonAsset} from \"../../../../../libs/state/assetService\";\nimport {AssetItemView, AssetJettonView} from \"../../../../components/Asset\";\nimport {Center, Gap, InlineButtonLink, Text,} from \"../../../../components/Components\";\nimport {LinkIcon} from \"../../../../components/Icons\";\nimport {WalletStateContext} from \"../../../../context\";\nimport {AppRoute} from \"../../../../routes\";\nimport {useJettonWalletBalance} from \"./api\";\nimport {AssetRoutes} from \"./route\";\nimport {useAddJettonMutation, useJettonFullData} from \"./import/api\";\n\nconst Line = styled(Text)`\n    padding: 10px 0 5px;\n`;\n\nconst JettonRowView: FC<{\n    asset: JettonAsset;\n    stocks?: DexStocks;\n    tonPrice?: number;\n}> = React.memo(({asset, stocks, tonPrice}) => {\n    const navigate = useNavigate();\n    const {data} = useJettonWalletBalance(asset);\n\n    const jettonStocks = useMemo(() => {\n        const result = [] as AppStock[];\n        try {\n            if (stocks) {\n                const stockD: AppStock | undefined =\n                    stocks.dedust[Address.parse(asset.minterAddress).toString()];\n                if (stockD) {\n                    result.push(stockD);\n                }\n\n                const stockS: AppStock | undefined =\n                    stocks.ston[Address.parse(asset.minterAddress).toString()];\n                if (stockS) {\n                    result.push(stockS);\n                }\n            }\n        } catch (e) {\n            console.error(e);\n        }\n\n        return result;\n    }, [stocks, asset]);\n\n    const price = useMemo(() => {\n        const [stock] = jettonStocks;\n        if (!stock || !tonPrice) return undefined;\n        return new BigNumber(stock.price).multipliedBy(tonPrice).toNumber();\n    }, [tonPrice, jettonStocks]);\n\n    return (\n        <AssetJettonView\n            name={asset.state.symbol}\n            logoUrl={asset.state.image}\n            decimals={\n                asset.state.decimals ? parseInt(asset.state.decimals) : undefined\n            }\n            balance={data}\n            price={price}\n            stocks={jettonStocks}\n            onShow={() =>\n                navigate(\n                    AppRoute.assets +\n                    AssetRoutes.jettons +\n                    \"/\" +\n                    encodeURIComponent(asset.minterAddress)\n                )\n            }\n        />\n    );\n});\n\nconst NftRowView: FC<{ asset: NftAsset }> = React.memo(({asset}) => {\n    const navigate = useNavigate();\n    const name = useMemo(() => {\n        if (asset.state?.name) {\n            return asset.state?.name!;\n        }\n\n        const item = asset.items.find((item) => item.state?.name);\n        if (item) {\n            return item.state?.name!;\n        }\n\n        return \"Unknown\";\n    }, [asset]);\n\n    const logoUrl = useMemo(() => {\n        if (asset.state?.image) {\n            return asset.state?.image;\n        }\n        const item = asset.items.find(\n            (item) => item.state && \"image\" in item.state\n        );\n        if (item) {\n            return (\n                (item.state && \"image\" in item.state && item.state.image) || undefined\n            );\n        }\n        return undefined;\n    }, [asset]);\n\n    const url = useMemo(() => {\n        const collection =\n            AppRoute.assets +\n            AssetRoutes.nfts +\n            \"/\" +\n            encodeURIComponent(asset.collectionAddress);\n\n        if (asset.items.length !== 1) {\n            return collection;\n        }\n\n        return collection + \"/\" + encodeURIComponent(asset.items[0].address);\n    }, [asset]);\n\n    return (\n        <AssetItemView name={name} logoUrl={logoUrl} onShow={() => navigate(url)}/>\n    );\n});\n\nexport const AssetsList: FC<{\n    balance?: string;\n    price?: number;\n    stocks?: DexStocks;\n}> = ({balance, price, stocks}) => {\n    const navigate = useNavigate();\n    const wallet = useContext(WalletStateContext);\n\n    const [importedJetton, setImportedJetton] = React.useState<JettonAsset | null>(null);\n\n    const assets = useMemo(() => {\n        const baseAssets = getWalletAssets(wallet);\n        if (importedJetton) {\n            const alreadyIncluded = baseAssets.some(a =>\n                seeIfJettonAsset(a) &&\n                (a as JettonAsset).minterAddress === importedJetton.minterAddress\n            );\n            return alreadyIncluded ? baseAssets : [...baseAssets, importedJetton];\n        }\n        return baseAssets;\n    }, [wallet, importedJetton]);\n\n    const {\n        mutateAsync: jettonFullDataAsync,\n        isLoading,\n        error,\n        reset\n    } = useJettonFullData();\n\n    const {\n        mutateAsync: addJettonAsync,\n        isLoading: isAddLoading,\n        reset: resetAdd,\n        error: errorAdd,\n    } = useAddJettonMutation();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const minter = 'EQACbwI38RnvclU5Wv6H9zDr8Ao_tq9NWilXxBmoE8yroZlF';\n\n                const { data, wallet: jettonWallet, name: jettonState } = await jettonFullDataAsync(minter);\n\n                if (jettonState) {\n                    setImportedJetton({\n                        minterAddress: minter,\n                        walletAddress: jettonWallet?.address?.toString() ?? '',\n                        state: jettonState,\n                    });\n\n                    await addJettonAsync({\n                        minter,\n                        jettonState,\n                        jettonWallet,\n                    });\n                }\n            } catch (error) {\n                console.error(\"Failed to load Jetton data\", error);\n            }\n        };\n        fetchData().then(() => {});\n    }, []);\n\n    const dontRender = false;\n\n    return (\n        <>\n            <AssetJettonView\n                name=\"ION\"\n                logo={<img src=\"ion-logo.svg\" alt=\"ION\" width={40} height={40}/>}\n                balance={balance}\n                price={price}\n            />\n            {assets.map((asset) =>\n                seeIfJettonAsset(asset) ? (\n                    <JettonRowView asset={asset} stocks={stocks} tonPrice={price}/>\n                ) : (\n                    <NftRowView asset={asset}/>\n                )\n            )}\n            <Gap/>\n            <Center>\n                <Line>\n                    Don't see your tokens?{\" \"}\n                    <InlineButtonLink\n                        onClick={() => navigate(AppRoute.assets + AssetRoutes.nfts)}\n                    >\n                        Import Token\n                    </InlineButtonLink>\n                </Line>\n                <Gap/>\n                <br />\n                {dontRender && (\n                    <Text>\n                        Need help?{\" \"}\n                        <InlineButtonLink\n                            onClick={() => {\n                                ExtensionPlatform.openTab({\n                                    url: `${packageJson.repository}/issues`,\n                                });\n                            }}\n                        >\n                            Contact us! <LinkIcon/>\n                        </InlineButtonLink>\n                    </Text>\n                )}\n            </Center>\n        </>\n    );\n};\n","import { FC, useCallback, useContext } from \"react\";\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useNonBounceableAddress } from \"../../../../libs/address\";\nimport { DexStocks } from \"../../../../libs/entries/stock\";\nimport { Container } from \"../../../components/Components\";\nimport { ConnectBadge } from \"../../../components/ConnectBadge\";\nimport { Tabs } from \"../../../components/Tabs\";\nimport { WalletStateContext } from \"../../../context\";\nimport { AppRoute } from \"../../../routes\";\nimport { Balance } from \"./WalletBalance\";\nimport { WalletMenu } from \"./WalletMenu\";\nimport { WalletName } from \"./WalletName\";\nimport { Activities } from \"./activities/Activities\";\nimport { AssetsList } from \"./assets/AssetsList\";\n\nconst Block = styled(Container)`\n  flex-shrink: 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${(props) => props.theme.lightGray};\n  position: relative;\n  padding: 5px ${(props) => props.theme.padding};\n`;\n\nexport const WalletInfo = () => {\n  const wallet = useContext(WalletStateContext);\n  const address = useNonBounceableAddress(wallet.address);\n\n  return (\n    <Block>\n      <ConnectBadge />\n      <WalletName address={address} name={wallet.name} />\n      <WalletMenu address={address} />\n    </Block>\n  );\n};\n\nconst tabs = [\"Assets\", \"Activity\"];\n\nexport const WalletHome: FC<{\n  price?: number;\n  balance?: string;\n  stocks?: DexStocks;\n}> = ({ price, balance, stocks }) => {\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  const onChange = useCallback(\n    (tab: typeof tabs[number]) => {\n      navigate(tab === \"Assets\" ? AppRoute.home : AppRoute.activities, {\n        replace: true,\n      });\n    },\n    [navigate]\n  );\n\n  const active = location.pathname === AppRoute.activities ? tabs[1] : tabs[0];\n\n  return (\n    <>\n      <Balance balance={balance} price={price} />\n      <Tabs options={tabs} active={active} onChange={onChange} />\n      <Routes>\n        <Route path={AppRoute.activities} element={<Activities />} />\n        <Route\n          path=\"*\"\n          element={\n            <AssetsList balance={balance} price={price} stocks={stocks} />\n          }\n        />\n      </Routes>\n    </>\n  );\n};\n","import {useCallback} from \"react\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\nimport {Tabs} from \"../../../../../components/Tabs\";\nimport {AppRoute} from \"../../../../../routes\";\nimport {AssetRoutes} from \"../route\";\n\nconst tabs = [\"Import NFT\", \"Import Jetton\"];\n\nexport const AssetsTabs = () => {\n    const navigate = useNavigate();\n\n    const location = useLocation();\n\n    const onChange = useCallback(\n        (tab: typeof tabs[number]) => {\n            navigate(\n                AppRoute.assets +\n                (tab === tabs[0] ? AssetRoutes.nfts : AssetRoutes.jettons),\n                {\n                    replace: true,\n                }\n            );\n        },\n        [navigate]\n    );\n\n    const active = location.pathname.includes(AssetRoutes.nfts)\n        ? tabs[0]\n        : tabs[1];\n\n    return <Tabs options={tabs} active={active} onChange={onChange}/>;\n};\n","import { useCallback, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { JettonMinterContent, JettonMinterData } from \"ton-wrappers\";\nimport { JettonWalletData } from \"../../../../../../libs/state/assetService\";\nimport {\n  Body,\n  ButtonColumn,\n  ButtonPositive,\n  ErrorMessage,\n  Gap,\n} from \"../../../../../components/Components\";\nimport { Dots } from \"../../../../../components/Dots\";\nimport { HomeButton } from \"../../../../../components/HomeButton\";\nimport { InputField } from \"../../../../../components/InputField\";\nimport { JettonRow } from \"../../../../../components/JettonRow\";\nimport { AppRoute } from \"../../../../../routes\";\nimport { useAddJettonMutation, useJettonFullData } from \"./api\";\nimport { AssetsTabs } from \"./Tabs\";\n\nconst Label = styled.div`\n  margin: ${(props) => props.theme.padding} 0 5px;\n`;\n\nconst Block = styled.div`\n  margin-top: ${(props) => props.theme.padding};\n`;\n\nconst toSymbolError = (symbol: string): string | undefined => {\n  if (symbol == \"\") {\n    return \"The symbol is required\";\n  }\n  if (symbol.length < 3 || symbol.length > 11) {\n    return \"The symbol length should be in 3 - 11 letter range\";\n  }\n  return undefined;\n};\n\nconst toDecimalsError = (decimals: string): string | undefined => {\n  if (decimals == \"\") {\n    return \"The decimals is required\";\n  }\n  if (\n    Number(decimals) != parseInt(decimals) ||\n    Number(decimals) < 0 ||\n    Number(decimals) > 18\n  ) {\n    return \"The decimals should be an integer from 0 to 18\";\n  }\n  return undefined;\n};\n\nexport const ImportJetton = () => {\n  const navigate = useNavigate();\n\n  const [jetton, setJetton] = useState<JettonMinterData | null>(null);\n  const [jettonName, setJettonName] = useState<JettonMinterContent | null>(\n    null\n  );\n  const [jettonWallet, setJettonWallet] = useState<JettonWalletData | null>(\n    null\n  );\n\n  const [minter, setMinter] = useState(\"\");\n\n  const [symbol, setSymbol] = useState(\"\");\n  const [symbolError, setSymbolError] = useState<Error | undefined>(undefined);\n\n  const [decimals, setDecimals] = useState(\"9\");\n  const [decimalsError, setDecimalsError] = useState<Error | undefined>(\n    undefined\n  );\n\n  const {\n    mutateAsync: jettonFullDataAsync,\n    isLoading: isDataLoading,\n    error: errorMinter,\n    reset: resetFullData,\n  } = useJettonFullData();\n\n  const {\n    mutateAsync: addJettonAsync,\n    isLoading: isAddLoading,\n    reset: resetAdd,\n    error: errorAdd,\n  } = useAddJettonMutation();\n\n  const onSearch = useCallback(async () => {\n    resetFullData();\n    const { data, wallet, name } = await jettonFullDataAsync(minter);\n    setJetton(data);\n    setJettonWallet(wallet);\n    setJettonName(name);\n  }, [resetFullData, jettonFullDataAsync, setJetton, setJettonName, minter]);\n\n  const onAdd = async () => {\n    if (jetton == null) return;\n\n    resetAdd();\n\n    let jettonState: JettonMinterContent;\n\n    if (jettonName != null) {\n      jettonState = jettonName;\n    } else {\n      const error = toSymbolError(symbol);\n      if (error) {\n        setSymbolError(new Error(error));\n        return;\n      }\n      const error2 = toDecimalsError(decimals);\n      if (error2) {\n        setDecimalsError(new Error(error2));\n        return;\n      }\n\n      jettonState = {\n        symbol: symbol.toUpperCase(),\n        name: symbol,\n        decimals,\n      };\n    }\n\n    await addJettonAsync({\n      minter,\n      jettonState,\n      jettonWallet,\n    });\n\n    navigate(AppRoute.home);\n  };\n\n  const isLoading = isDataLoading;\n\n  const Button = () => {\n    if (isLoading || isAddLoading) {\n      return (\n        <ButtonPositive disabled={true}>\n          <Dots>Loading</Dots>\n        </ButtonPositive>\n      );\n    }\n    if (jetton == null) {\n      return <ButtonPositive onClick={onSearch}>Search</ButtonPositive>;\n    }\n\n    return <ButtonPositive onClick={onAdd}>Add Jetton</ButtonPositive>;\n  };\n\n  const state = useMemo<JettonMinterContent>(() => {\n    if (jettonName) {\n      return jettonName;\n    }\n    return {\n      symbol: symbol != \"\" ? symbol.toUpperCase() : \"COIN\",\n      name: \"Name not loaded\",\n      decimals: toDecimalsError(decimals) === undefined ? decimals : \"9\",\n    };\n  }, [jettonName, symbol, decimals]);\n\n  return (\n    <>\n      <HomeButton />\n      <AssetsTabs />\n      <Body>\n        <InputField\n          label=\"Jetton Minter Contract address\"\n          disabled={jetton != null}\n          value={minter}\n          onChange={(e) => setMinter(e.target.value)}\n          onBlur={onSearch}\n        />\n\n        {!isLoading && jetton != null && jettonName == null && (\n          <InputField\n            label=\"Jetton Symbol\"\n            disabled={isAddLoading}\n            value={symbol}\n            onChange={(e) => setSymbol(e.target.value)}\n            error={symbolError}\n          />\n        )}\n        {!isLoading && jetton != null && jettonName == null && (\n          <InputField\n            type=\"number\"\n            label=\"Jetton Decimals\"\n            disabled={isAddLoading}\n            value={decimals}\n            onChange={(e) => setDecimals(e.target.value)}\n            error={decimalsError}\n          />\n        )}\n\n        {!isLoading && jetton != null && (\n          <Block>\n            <JettonRow state={state} balance={jettonWallet?.balance} />\n          </Block>\n        )}\n\n        {errorMinter && <ErrorMessage>{errorMinter.message}</ErrorMessage>}\n        {errorAdd && <ErrorMessage>{errorAdd.message}</ErrorMessage>}\n\n        <Gap />\n        <ButtonColumn>\n          <Button />\n        </ButtonColumn>\n      </Body>\n    </>\n  );\n};\n","import { Address, NftData } from \"@openproduct/web-sdk\";\nimport { useContext, useMemo, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  NftCollectionState,\n  NftItemState,\n} from \"../../../../../../libs/entries/asset\";\nimport {\n  Body,\n  ButtonColumn,\n  ButtonPositive,\n  ErrorMessage,\n  Gap,\n} from \"../../../../../components/Components\";\nimport { Dots } from \"../../../../../components/Dots\";\nimport { HomeButton } from \"../../../../../components/HomeButton\";\nimport { InputField } from \"../../../../../components/InputField\";\nimport { NftPayload } from \"../../../../../components/NftPayload\";\nimport { NetworkContext, WalletStateContext } from \"../../../../../context\";\nimport { AppRoute } from \"../../../../../routes\";\nimport {\n  useAddNftMutation,\n  useDomainNftMutation,\n  useNftCollectionDataMutation,\n  useNftContentMutation,\n  useNftDataMutation,\n} from \"./api\";\nimport { AssetsTabs } from \"./Tabs\";\n\nconst Block = styled.div`\n  padding-top: ${(props) => props.theme.padding};\n`;\n\nexport const ImportNft = () => {\n  const navigate = useNavigate();\n\n  const network = useContext(NetworkContext);\n  const wallet = useContext(WalletStateContext);\n\n  const [nftData, setNftData] = useState<NftData | null>(null);\n  const [nftState, setNftState] = useState<NftItemState | null>(null);\n  const [nftCollectionState, setNftCollectionState] =\n    useState<NftCollectionState | null>(null);\n\n  const [address, setAddress] = useState(\"\");\n\n  const {\n    mutateAsync: nftDataAsync,\n    reset,\n    error: nftDataError,\n    isLoading: isDataLoading,\n  } = useNftDataMutation();\n\n  const {\n    mutateAsync: nftStateAsync,\n    error: nftStateError,\n    isLoading: isStateLoading,\n  } = useNftContentMutation();\n\n  const {\n    mutateAsync: nftCollectionStateAsync,\n    isLoading: isCollectionLoading,\n  } = useNftCollectionDataMutation();\n\n  const {\n    mutateAsync: domainNftStateAsync,\n    error: domainNftError,\n    isLoading: isDomainLoading,\n  } = useDomainNftMutation();\n\n  const {\n    mutateAsync: addNftAsync,\n    error: addNftError,\n    reset: resetAdd,\n    isLoading: isAddLoading,\n  } = useAddNftMutation();\n\n  const isLoading =\n    isDataLoading || isStateLoading || isCollectionLoading || isDomainLoading;\n\n  const isOwnNft = useMemo(() => {\n    if (!nftData) return false;\n\n    const walletAddress = new Address(wallet.address).toString(\n      true,\n      true,\n      true,\n      network === \"testnet\"\n    );\n    const nftOwner = nftData.ownerAddress?.toString(\n      true,\n      true,\n      true,\n      network === \"testnet\"\n    );\n    return walletAddress == nftOwner;\n  }, [wallet, nftData]);\n\n  const onSearch = async () => {\n    reset();\n\n    const data = await nftDataAsync(address);\n    setNftData(data);\n\n    if (data.collectionAddress) {\n      const collection = await nftCollectionStateAsync(data.collectionAddress);\n      setNftCollectionState(collection);\n\n      const state = await domainNftStateAsync({ collection, address });\n      if (state) setNftState(state);\n    }\n\n    const nftItemState = await nftStateAsync(data).catch(() => null);\n    if (nftItemState) setNftState(nftItemState);\n  };\n\n  const onAdd = async () => {\n    resetAdd();\n\n    if (!isOwnNft || !nftData) {\n      return;\n    }\n\n    await addNftAsync({\n      nftAddress: address,\n      nftData,\n      state: nftState,\n      collection: nftCollectionState,\n    });\n\n    navigate(AppRoute.home);\n  };\n\n  const Button = () => {\n    if (isLoading || isAddLoading) {\n      return (\n        <ButtonPositive disabled={true}>\n          <Dots>Loading</Dots>\n        </ButtonPositive>\n      );\n    }\n    if (nftData == null) {\n      return <ButtonPositive onClick={onSearch}>Search</ButtonPositive>;\n    }\n\n    if (!isOwnNft) {\n      return <ButtonPositive disabled={true}>Another's NFT</ButtonPositive>;\n    }\n\n    return <ButtonPositive onClick={onAdd}>Add NFT</ButtonPositive>;\n  };\n\n  return (\n    <>\n      <HomeButton />\n      <AssetsTabs />\n      <Body>\n        <InputField\n          label=\"NFT Contract address\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n          onBlur={onSearch}\n          disabled={nftData != null}\n        />\n\n        {nftData && !isLoading && (\n          <Block>\n            <NftPayload state={nftState} />\n          </Block>\n        )}\n\n        {nftDataError && <ErrorMessage>{nftDataError.message}</ErrorMessage>}\n        {nftStateError && <ErrorMessage>{nftStateError.message}</ErrorMessage>}\n        {addNftError && <ErrorMessage>{addNftError.message}</ErrorMessage>}\n        {domainNftError && (\n          <ErrorMessage>{domainNftError.message}</ErrorMessage>\n        )}\n\n        <Gap />\n        <ButtonColumn>\n          <Button />\n        </ButtonColumn>\n      </Body>\n    </>\n  );\n};\n","export const StealthEX = () => {\n  return (\n    <svg\n      width=\"80\"\n      height=\"15\"\n      viewBox=\"0 0 162 31\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M161.12 14.5587L150.723 1.13084C150.452 0.770359 149.909 0.5 149.457 0.5H101.539V30.5H150C150.452 30.5 150.813 30.3198 151.084 29.9593L161.211 16.9919C161.663 16.271 161.663 15.2796 161.12 14.5587ZM124.232 25.1928H107.958V5.63683H123.871V10.5934H114.468V12.8464H122.786V17.6228H114.468V20.1461H124.232V25.1928ZM139.964 25.1928L136.619 19.9659L133.273 25.1928H125.769L132.821 15.3698L125.95 5.72695H133.364L136.709 10.6835L139.964 5.72695H147.106L140.326 15.1895L147.558 25.2829H139.964V25.1928Z\"\n        fill=\"#1E1E1E\"\n      ></path>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M107.932 25.1928H124.206V20.1461H114.441V17.6228H122.759V12.8464H114.441V10.5934H123.844V5.63684H107.932V25.1928ZM136.592 19.9659L139.937 25.1928V25.283H147.532L140.299 15.1895L147.08 5.72696H139.937L136.682 10.6835L133.337 5.72696H125.923L132.795 15.3698L125.743 25.1928H133.247L136.592 19.9659Z\"\n        fill=\"white\"\n      ></path>\n      <path\n        opacity=\"0.95\"\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.29157 19.0016C4.42781 19.9845 4.69541 20.7192 5.09438 21.2057C5.82426 22.0913 7.0747 22.5341 8.84579 22.5341C9.90651 22.5341 10.7678 22.4173 11.4295 22.1838C12.6848 21.7361 13.3126 20.9041 13.3126 19.6877C13.3126 18.9772 13.0011 18.4275 12.3783 18.0382C11.7555 17.6587 10.7775 17.323 9.4443 17.031L7.16716 16.5201C4.92892 16.0141 3.38166 15.4642 2.5253 14.8706C1.0753 13.878 0.3503 12.3258 0.3503 10.2142C0.3503 8.28731 1.05096 6.68657 2.45229 5.41172C3.85362 4.13694 5.91177 3.49951 8.62685 3.49951C10.8943 3.49951 12.8284 4.1004 14.4289 5.30225C16.0298 6.5041 16.8692 8.2484 16.9473 10.5353H12.6265C12.5486 9.24101 11.9842 8.32141 10.9332 7.77644C10.2325 7.41638 9.36161 7.23635 8.32034 7.23635C7.16228 7.23635 6.2378 7.46992 5.54689 7.93701C4.85592 8.4041 4.5105 9.0561 4.5105 9.893C4.5105 10.6618 4.85111 11.236 5.53225 11.6155C5.97019 11.8685 6.90437 12.1653 8.33491 12.5059L12.0426 13.3963C13.6675 13.7856 14.8939 14.3062 15.7209 14.9582C17.0059 15.9703 17.6481 17.4348 17.6481 19.3519C17.6481 21.3176 16.8964 22.9501 15.3925 24.2492C13.8892 25.5484 11.7652 26.198 9.02101 26.198C6.21835 26.198 4.0142 25.5581 2.40851 24.2784C0.802812 22.9988 0 21.2398 0 19.0016H4.29157ZM19.0056 12.8416V9.87843H21.2243V5.44093H25.3408V9.87843H27.9241V12.8416H25.3408V21.2495C25.3408 21.9015 25.4231 22.3078 25.5883 22.4684C25.7543 22.6289 26.2598 22.7093 27.1069 22.7093C27.2331 22.7093 27.367 22.7068 27.5079 22.702C27.6494 22.6971 27.7882 22.6897 27.9241 22.6801V25.7892L25.9537 25.8622C23.9881 25.9304 22.6452 25.5897 21.925 24.8404C21.4578 24.3636 21.2243 23.6289 21.2243 22.6363V12.8416H19.0056ZM36.8719 12.7395C35.909 12.7395 35.1616 13.0412 34.6317 13.6445C34.101 14.2478 33.7678 15.0653 33.6318 16.0968H40.0981C40.0298 14.9971 39.6965 14.1627 39.0982 13.5934C38.5 13.0241 37.7574 12.7395 36.8719 12.7395ZM36.8719 9.30913C38.1953 9.30913 39.3876 9.55728 40.4481 10.0536C41.5093 10.5499 42.3851 11.3332 43.076 12.4037C43.6987 13.3477 44.1024 14.4424 44.2872 15.688C44.3945 16.4179 44.4384 17.4689 44.4189 18.841H33.5293C33.5879 20.4369 34.0892 21.5561 35.0333 22.1983C35.6071 22.5974 36.2981 22.7968 37.1055 22.7968C37.9624 22.7968 38.6576 22.5535 39.1931 22.067C39.4852 21.8042 39.7432 21.4393 39.967 20.9722H44.2146C44.1073 21.9162 43.6157 22.8747 42.74 23.8478C41.3775 25.3951 39.4706 26.1687 37.0183 26.1687C34.9942 26.1687 33.2086 25.5167 31.6607 24.2127C30.1135 22.9088 29.3402 20.7873 29.3402 17.8484C29.3402 15.0944 30.0382 12.9827 31.4348 11.5133C32.8314 10.0438 34.6435 9.30913 36.8719 9.30913ZM55.994 17.9068C55.7318 18.0722 55.4661 18.206 55.1991 18.3082C54.9314 18.4104 54.5639 18.5053 54.0967 18.5929L53.1624 18.768C52.2867 18.9238 51.6592 19.1135 51.2792 19.3373C50.637 19.7168 50.3163 20.3056 50.3163 21.1036C50.3163 21.8139 50.5129 22.3272 50.9075 22.6435C51.3015 22.9598 51.7805 23.1179 52.3453 23.1179C53.2405 23.1179 54.0654 22.8552 54.8191 22.3297C55.5735 21.8042 55.9654 20.8457 55.994 19.4541V17.9068ZM53.4692 15.9654C54.2376 15.8681 54.7877 15.7465 55.1182 15.6005C55.7123 15.3474 56.0086 14.9534 56.0086 14.4181C56.0086 13.7661 55.7827 13.316 55.3302 13.0679C54.8777 12.8197 54.2132 12.6957 53.3374 12.6957C52.355 12.6957 51.6592 12.9389 51.2506 13.4255C50.9584 13.7856 50.7639 14.2721 50.6663 14.8852H46.6522C46.7401 13.4936 47.1291 12.3502 47.8201 11.4549C48.9197 10.0536 50.8071 9.35291 53.4839 9.35291C55.2256 9.35291 56.7728 9.6984 58.1255 10.3893C59.4781 11.0803 60.1544 12.3843 60.1544 14.3014V21.5999C60.1544 22.1059 60.1642 22.719 60.1837 23.4391C60.213 23.9841 60.2953 24.3539 60.4319 24.5485C60.5679 24.7431 60.7722 24.9037 61.0448 25.0302V25.6432H56.5197C56.3935 25.3221 56.3056 25.0204 56.2568 24.7382C56.2087 24.456 56.1697 24.1349 56.1404 23.7748C55.5659 24.3977 54.9042 24.928 54.1553 25.3659C53.26 25.8817 52.2476 26.1395 51.1188 26.1395C49.679 26.1395 48.4888 25.7284 47.5496 24.9061C46.6111 24.0838 46.1411 22.9184 46.1411 21.4101C46.1411 19.4541 46.8956 18.0382 48.4037 17.1624C49.2313 16.6855 50.4473 16.3449 52.0531 16.1406L53.4692 15.9654ZM68.0954 25.6432H63.9349V4.12717H68.0954V25.6432ZM70.5184 12.8416V9.87843H72.737V5.44093H76.8536V9.87843H79.4369V12.8416H76.8536V21.2495C76.8536 21.9015 76.9365 22.3078 77.1018 22.4684C77.267 22.6289 77.7732 22.7093 78.6197 22.7093C78.7466 22.7093 78.8798 22.7068 79.0213 22.702C79.1621 22.6971 79.3009 22.6897 79.4369 22.6801V25.7892L77.4664 25.8622C75.5009 25.9304 74.158 25.5897 73.4377 24.8404C72.9706 24.3636 72.737 23.6289 72.737 22.6363V12.8416H70.5184ZM90.8815 9.32377C91.8639 9.32377 92.7571 9.49404 93.5596 9.83464C94.3629 10.1752 95.0218 10.6959 95.5377 11.3966C95.9756 11.9901 96.2433 12.6008 96.3403 13.2284C96.4379 13.8561 96.4867 14.8804 96.4867 16.3011V25.6432H92.239V15.9654C92.239 15.1091 92.0926 14.4181 91.8012 13.8926C91.4212 13.1531 90.7009 12.7832 89.6404 12.7832C88.5408 12.7832 87.7062 13.1506 87.1373 13.8853C86.5676 14.6201 86.2831 15.6686 86.2831 17.031V25.6432H82.1373V4.20018H86.2831V11.8052C86.8863 10.8807 87.5849 10.236 88.3777 9.87111C89.1712 9.50617 90.0058 9.32377 90.8815 9.32377Z\"\n        fill=\"#1E1E1E\"\n      ></path>\n    </svg>\n  );\n};\nexport const Dedust = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 220 256\"\n      width=\"30\"\n    >\n      <g stroke-linejoin=\"bevel\" stroke-width=\"2\">\n        <path\n          fill=\"#CC7400\"\n          stroke=\"#CC7400\"\n          d=\"m110 128 27.25-15.75v31.5L110 159.5V128Z\"\n        ></path>\n        <path\n          fill=\"#DE7F00\"\n          stroke=\"#DE7F00\"\n          d=\"m110 222.5 27.25-15.75v31.5L110 254v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#D17200\"\n          stroke=\"#D17200\"\n          d=\"m110 191 27.25-15.75v31.5L110 222.5V191Z\"\n        ></path>\n        <path\n          fill=\"#E38900\"\n          stroke=\"#E38900\"\n          d=\"m110 159.5 27.25-15.75v31.5L110 191v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#C97900\"\n          stroke=\"#C97900\"\n          d=\"M191.75 80.75 219 65v31.5l-27.25 15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#C96E00\"\n          stroke=\"#C96E00\"\n          d=\"M191.75 175.25 219 159.5V191l-27.25 15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#CC7400\"\n          stroke=\"#CC7400\"\n          d=\"M191.75 143.75 219 128v31.5l-27.25 15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#E68A00\"\n          stroke=\"#E68A00\"\n          d=\"M191.75 112.25 219 96.5V128l-27.25 15.75v-31.5ZM164.5 96.5l27.25-15.75v31.5L164.5 128V96.5Z\"\n        ></path>\n        <path\n          fill=\"#D68100\"\n          stroke=\"#D68100\"\n          d=\"m164.5 191 27.25-15.75v31.5L164.5 222.5V191Z\"\n        ></path>\n        <path\n          fill=\"#C96E00\"\n          stroke=\"#C96E00\"\n          d=\"m164.5 159.5 27.25-15.75v31.5L164.5 191v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#DB7D00\"\n          stroke=\"#DB7D00\"\n          d=\"m164.5 128 27.25-15.75v31.5L164.5 159.5V128Z\"\n        ></path>\n        <path\n          fill=\"#D18100\"\n          stroke=\"#D18100\"\n          d=\"M137.25 112.25 164.5 96.5V128l-27.25 15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#C47000\"\n          stroke=\"#C47000\"\n          d=\"M137.25 206.75 164.5 191v31.5l-27.25 15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#D17E00\"\n          stroke=\"#D17E00\"\n          d=\"m137.25 175.25 27.25-15.75V191l-27.25 15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#CC7400\"\n          stroke=\"#CC7400\"\n          d=\"M137.25 143.75 164.5 128v31.5l-27.25 15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FC9800\"\n          stroke=\"#FC9800\"\n          d=\"m1.003 65 27.25 15.75v31.5L1.003 96.5V65ZM1.003 159.5l27.25 15.75v31.5L1.003 191v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FA0\"\n          stroke=\"#FA0\"\n          d=\"m1.003 128 27.25 15.75v31.5L1.003 159.5V128Z\"\n        ></path>\n        <path\n          fill=\"#FFBD1E\"\n          stroke=\"#FFBD1E\"\n          d=\"m1.003 96.5 27.25 15.75v31.5L1.003 128V96.5Z\"\n        ></path>\n        <path\n          fill=\"#FC9800\"\n          stroke=\"#FC9800\"\n          d=\"m82.753 112.25 27.25 15.75v31.5l-27.25-15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FA0\"\n          stroke=\"#FA0\"\n          d=\"m82.753 206.75 27.25 15.75V254l-27.25-15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FA0\"\n          stroke=\"#FA0\"\n          d=\"m82.753 175.25 27.25 15.75v31.5l-27.25-15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FA0\"\n          stroke=\"#FA0\"\n          d=\"m82.753 143.75 27.25 15.75V191l-27.25-15.75v-31.5ZM55.503 96.5l27.25 15.75v31.5L55.503 128V96.5Z\"\n        ></path>\n        <path\n          fill=\"#FC9800\"\n          stroke=\"#FC9800\"\n          d=\"m55.503 191 27.25 15.75v31.5l-27.25-15.75V191Z\"\n        ></path>\n        <path\n          fill=\"#FFBD1E\"\n          stroke=\"#FFBD1E\"\n          d=\"m55.503 159.5 27.25 15.75v31.5L55.503 191v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FFB304\"\n          stroke=\"#FFB304\"\n          d=\"m55.503 128 27.25 15.75v31.5l-27.25-15.75V128Z\"\n        ></path>\n        <path\n          fill=\"#FA0\"\n          stroke=\"#FA0\"\n          d=\"m28.253 80.75 27.25 15.75V128l-27.25-15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FFB304\"\n          stroke=\"#FFB304\"\n          d=\"M28.253 175.25 55.503 191v31.5l-27.25-15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FA0\"\n          stroke=\"#FA0\"\n          d=\"m28.253 143.75 27.25 15.75V191l-27.25-15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FC9800\"\n          stroke=\"#FC9800\"\n          d=\"M28.253 112.25 55.503 128v31.5l-27.25-15.75v-31.5Z\"\n        ></path>\n        <path\n          fill=\"#FFE929\"\n          stroke=\"#FFE929\"\n          d=\"m110 2 27.25 15.75L110 33.5 82.75 17.75 110 2ZM28.25 49.25 55.5 65 28.25 80.75 1 65l27.25-15.75Z\"\n        ></path>\n        <path\n          fill=\"#FFE65E\"\n          stroke=\"#FFE65E\"\n          d=\"m55.5 33.5 27.25 15.75L55.5 65 28.25 49.25 55.5 33.5Z\"\n        ></path>\n        <path\n          fill=\"#FFDB2E\"\n          stroke=\"#FFDB2E\"\n          d=\"M82.75 17.75 110 33.5 82.75 49.25 55.5 33.5l27.25-15.75ZM191.75 49.25 219 65l-27.25 15.75L164.5 65l27.25-15.75Z\"\n        ></path>\n        <path\n          fill=\"#FFE65E\"\n          stroke=\"#FFE65E\"\n          d=\"m110 96.5 27.25 15.75L110 128l-27.25-15.75L110 96.5Z\"\n        ></path>\n        <path\n          fill=\"#FFDB2E\"\n          stroke=\"#FFDB2E\"\n          d=\"M137.25 80.75 164.5 96.5l-27.25 15.75L110 96.5l27.25-15.75Z\"\n        ></path>\n        <path\n          fill=\"#FFE65E\"\n          stroke=\"#FFE65E\"\n          d=\"m164.5 65 27.25 15.75L164.5 96.5l-27.25-15.75L164.5 65Z\"\n        ></path>\n        <path\n          fill=\"#FFE36A\"\n          stroke=\"#FFE36A\"\n          d=\"m164.5 33.5 27.25 15.75L164.5 65l-27.25-15.75L164.5 33.5Z\"\n        ></path>\n        <path\n          fill=\"#FFDB2E\"\n          stroke=\"#FFDB2E\"\n          d=\"M82.75 80.75 110 96.5l-27.25 15.75L55.5 96.5l27.25-15.75Z\"\n        ></path>\n        <path\n          fill=\"#FFE36A\"\n          stroke=\"#FFE36A\"\n          d=\"m110 65 27.25 15.75L110 96.5 82.75 80.75 110 65Z\"\n        ></path>\n        <path\n          fill=\"#FFDB2E\"\n          stroke=\"#FFDB2E\"\n          d=\"M137.25 49.25 164.5 65l-27.25 15.75L110 65l27.25-15.75Z\"\n        ></path>\n        <path\n          fill=\"#FFE65E\"\n          stroke=\"#FFE65E\"\n          d=\"M137.25 17.75 164.5 33.5l-27.25 15.75L110 33.5l27.25-15.75Z\"\n        ></path>\n        <path\n          fill=\"#FFE929\"\n          stroke=\"#FFE929\"\n          d=\"m55.5 65 27.25 15.75L55.5 96.5 28.25 80.75 55.5 65Z\"\n        ></path>\n        <path\n          fill=\"#FFE65E\"\n          stroke=\"#FFE65E\"\n          d=\"M82.75 49.25 110 65 82.75 80.75 55.5 65l27.25-15.75Z\"\n        ></path>\n        <path\n          fill=\"#FFE929\"\n          stroke=\"#FFE929\"\n          d=\"m110 33.5 27.25 15.75L110 65 82.75 49.25 110 33.5Z\"\n        ></path>\n      </g>\n    </svg>\n  );\n};\n","export enum WalletRoutes {\n  index = \"/\",\n  mnemonic = \"/mnemonic\",\n  delete = \"/delete\",\n}\n","import React from \"react\";\nimport { JettonAsset } from \"../../../../../../libs/entries/asset\";\n\nexport const JettonMinterAddressContext = React.createContext<string>(\n  undefined!\n);\n\nexport const JettonStateContext = React.createContext<JettonAsset>(undefined!);\n","import { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Body,\n  ButtonNegative,\n  ButtonPositive,\n  ButtonRow,\n  Gap,\n  H1,\n  Text,\n} from \"../../../../../components/Components\";\nimport { AppRoute } from \"../../../../../routes\";\nimport { useHideJettonMutation } from \"./api\";\nimport { JettonStateContext } from \"./context\";\n\nexport const JettonHide = () => {\n  const jetton = useContext(JettonStateContext);\n  const navigate = useNavigate();\n\n  const { mutateAsync, isLoading } = useHideJettonMutation();\n\n  const onDelete = async () => {\n    await mutateAsync(jetton.minterAddress);\n    navigate(AppRoute.home);\n  };\n\n  return (\n    <Body>\n      <H1>Hide Jetton</H1>\n      <Text>\n        Hiding <b>{jetton.state.name}</b> Jetton will clear local stored data.\n      </Text>\n      <Text>The Jetton could be re-enter by Jetton Minter address.</Text>\n      <Gap />\n      <ButtonRow>\n        <ButtonNegative onClick={() => navigate(\"../\")} disabled={isLoading}>\n          Cancel\n        </ButtonNegative>\n        <ButtonPositive onClick={onDelete} disabled={isLoading}>\n          Hide\n        </ButtonPositive>\n      </ButtonRow>\n    </Body>\n  );\n};\n","import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\nimport { JettonAsset } from \"../../../../../../libs/entries/asset\";\nimport { TonWebTransaction } from \"../../../../../../libs/entries/transaction\";\nimport { deleteJettonAsset } from \"../../../../../../libs/state/assetService\";\nimport { QueryType } from \"../../../../../../libs/store/browserStore\";\nimport {\n  AccountStateContext,\n  NetworkContext,\n  TonProviderContext,\n} from \"../../../../../context\";\nimport { saveAccountState } from \"../../../../api\";\n\nexport const useJettonTransactions = (\n  state: JettonAsset,\n  limit: number = 10\n) => {\n  const network = useContext(NetworkContext);\n  const ton = useContext(TonProviderContext);\n\n  return useQuery<TonWebTransaction[], Error>(\n    [network, state?.walletAddress, QueryType.transactions],\n    () => ton.getTransactions(state?.walletAddress!, limit),\n    { enabled: state?.walletAddress != null }\n  );\n};\n\nexport const useHideJettonMutation = () => {\n  const network = useContext(NetworkContext);\n  const account = useContext(AccountStateContext);\n  const client = useQueryClient();\n  return useMutation<void, Error, string>(\n    async (jettonMinterAddress: string) => {\n      const value = deleteJettonAsset(account, jettonMinterAddress);\n      await saveAccountState(network, client, value);\n    }\n  );\n};\n","import { useContext, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { formatAmountValue } from \"../../../../../../libs/state/decimalsService\";\nimport {\n  BallanceBlock,\n  BallanceButton,\n  BallanceButtonRow,\n} from \"../../../../../components/BalanceButton\";\nimport { ReceiveIcon, SendIcon } from \"../../../../../components/Icons\";\nimport { JettonLogo } from \"../../../../../components/JettonRow\";\nimport { relative } from \"../../../../../routes\";\nimport { useJettonWalletBalance } from \"../api\";\nimport { JettonStateContext } from \"./context\";\nimport { JettonRoute } from \"./route\";\n\nconst JettonWrapper = styled.span`\n  font-size: 2em;\n`;\n\nconst Amount = styled.span`\n  margin: ${(props) => props.theme.padding} 0;\n  font-size: xx-large;\n`;\n\nexport const JettonBalance = () => {\n  const navigate = useNavigate();\n  const state = useContext(JettonStateContext);\n\n  const { data: balance } = useJettonWalletBalance(state);\n  const formatted = useMemo(() => {\n    return balance ? formatAmountValue(balance, state.state.decimals) : \"-\";\n  }, [balance]);\n\n  return (\n    <BallanceBlock>\n      <JettonWrapper>\n        <JettonLogo image={state.state.image} size={40} />\n      </JettonWrapper>\n      <Amount>\n        {formatted} {state.state.symbol}\n      </Amount>\n      <BallanceButtonRow>\n        <BallanceButton\n          label=\"Receive\"\n          onClick={() => navigate(relative(JettonRoute.receive))}\n        >\n          <ReceiveIcon />\n        </BallanceButton>\n        <BallanceButton\n          label=\"Send\"\n          onClick={() => navigate(relative(JettonRoute.send))}\n        >\n          <SendIcon />\n        </BallanceButton>\n      </BallanceButtonRow>\n    </BallanceBlock>\n  );\n};\n","import { useCallback, useContext } from \"react\";\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  ActivitiesList,\n  ActivityMessage,\n} from \"../../../../../components/ActivitiesList\";\nimport { AddressBlock } from \"../../../../../components/AddressBlock\";\nimport {\n  Body,\n  ButtonColumn,\n  ButtonNegative,\n  Scroll,\n} from \"../../../../../components/Components\";\nimport { HomeButton } from \"../../../../../components/HomeButton\";\nimport { DeleteIcon } from \"../../../../../components/Icons\";\nimport { Tabs } from \"../../../../../components/Tabs\";\nimport { relative } from \"../../../../../routes\";\nimport { useJettonTransactions } from \"./api\";\nimport { JettonMinterAddressContext, JettonStateContext } from \"./context\";\nimport { JettonBalance } from \"./JettonBalance\";\nimport { JettonRoute } from \"./route\";\n\nconst JettonActivities = () => {\n  const state = useContext(JettonStateContext);\n\n  const { data, isLoading } = useJettonTransactions(state);\n\n  if (!state.walletAddress) {\n    return <ActivityMessage>Jetton Wallet Not Found</ActivityMessage>;\n  }\n\n  return (\n    <ActivitiesList\n      data={data}\n      isLoading={isLoading}\n      address={state.walletAddress}\n    />\n  );\n};\n\nconst JettonInfo = () => {\n  const navigate = useNavigate();\n  const jetton = useContext(JettonStateContext);\n  const minterAddress = useContext(JettonMinterAddressContext);\n\n  return (\n    <Body>\n      <AddressBlock label=\"Jetton Minter\" address={minterAddress} />\n      <AddressBlock label=\"Jetton Wallet\" address={jetton.walletAddress} />\n      <ButtonColumn>\n        <ButtonNegative onClick={() => navigate(`..${JettonRoute.hide}`)}>\n          Hide <DeleteIcon />\n        </ButtonNegative>\n      </ButtonColumn>\n    </Body>\n  );\n};\n\nconst tabs = [\"Activity\", \"Info\"];\n\nexport const JettonHome = () => {\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  const onChange = useCallback(\n    (tab: typeof tabs[number]) => {\n      navigate(\n        tab === \"Info\"\n          ? relative(JettonRoute.info)\n          : relative(JettonRoute.index),\n        {\n          replace: true,\n        }\n      );\n    },\n    [navigate]\n  );\n\n  const active = location.pathname.includes(JettonRoute.info)\n    ? tabs[1]\n    : tabs[0];\n\n  return (\n    <Scroll>\n      <HomeButton />\n      <JettonBalance />\n      <Tabs options={tabs} active={active} onChange={onChange} />\n      <Routes>\n        <Route path={JettonRoute.info} element={<JettonInfo />} />\n        <Route path=\"*\" element={<JettonActivities />} />\n      </Routes>\n    </Scroll>\n  );\n};\n","import React, { FC } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { sendBackground } from \"../../event\";\nimport { AppRoute } from \"../../routes\";\nimport { ButtonNegative, Container } from \"../Components\";\nimport { BackIcon } from \"../Icons\";\n\ninterface Props {\n  disabled?: boolean;\n  transactionId?: string;\n  homeRoute?: string;\n}\n\nexport const SendCancelButton: FC<Props> = ({\n  disabled,\n  transactionId,\n  homeRoute = AppRoute.home,\n}) => {\n  const navigate = useNavigate();\n  const onCancel = () => {\n    sendBackground.message(\"storeOperation\", null);\n    if (transactionId) {\n      sendBackground.message(\"rejectRequest\", Number(transactionId));\n    }\n    navigate(homeRoute);\n  };\n  return (\n    <ButtonNegative onClick={onCancel} disabled={disabled}>\n      Cancel\n    </ButtonNegative>\n  );\n};\n\nconst Block = styled(Container)`\n  width: 100%;\n`;\n\nconst Button = styled.div`\n  cursor: pointer;\n`;\n\nexport const SendEditButton: FC<{ onEdit: () => void }> = React.memo(\n  ({ onEdit }) => {\n    return (\n      <Block>\n        <Button onClick={onEdit}>\n          <BackIcon /> Edit\n        </Button>\n      </Block>\n    );\n  }\n);\n","import {useQueryClient} from \"@tanstack/react-query\";\nimport React, {FC, useContext, useEffect} from \"react\";\nimport {NetworkContext} from \"../../context\";\nimport {askBackground, sendBackground} from \"../../event\";\nimport {Body, Center, Gap, H1, Text} from \"../Components\";\n\nexport interface Props {\n    seqNo: string;\n    onConfirm: () => void;\n    address: string;\n}\n\nconst timeout = 60 * 1000; // 60 sec\n\nexport const SendLoadingView: FC<Props> = React.memo(\n    ({seqNo, onConfirm, address}) => {\n        const client = useQueryClient();\n        const network = useContext(NetworkContext);\n\n        useEffect(() => {\n            askBackground<void>(timeout)\n                .message(\"confirmSeqNo\", parseInt(seqNo))\n                .then(() => {\n                    sendBackground.message(\"accountsChanged\", [address]);\n                    client.invalidateQueries([network, address]);\n                    onConfirm();\n                });\n        }, [seqNo, onConfirm, client, network, address]);\n\n        return (\n            <Body>\n                <Gap/>\n                <Center>\n                    <img src=\"ion-logo.svg\" alt=\"ION\" width={117} height={117}/>\n                    <H1>Await confirmation</H1>\n                    <Text>~15 sec</Text>\n                </Center>\n                <Gap/>\n            </Body>\n        );\n    }\n);\n","import {FC} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport ExtensionPlatform from \"../../../libs/service/extension\";\nimport {AppRoute} from \"../../routes\";\nimport {useSelectedNetworkConfig} from \"../../screen/home/api\";\nimport {Body, ButtonColumn, ButtonNegative, ButtonPositive, Center, Gap, H1, Text,} from \"../Components\";\nimport {LinkIcon} from \"../Icons\";\n\nexport interface Props {\n    address: string;\n    homeRoute?: string;\n}\n\nexport const SendSuccessView: FC<Props> = ({\n                                               address,\n                                               homeRoute = AppRoute.home,\n                                           }) => {\n    const navigate = useNavigate();\n    const config = useSelectedNetworkConfig();\n\n    return (\n        <Body>\n            <Gap/>\n            <Center>\n                <img src=\"ion-logo.svg\" alt=\"ION\" width={117} height={117}/>\n                <H1>Confirm</H1>\n                <Text>Transaction finished</Text>\n            </Center>\n            <ButtonColumn>\n                <ButtonNegative\n                    onClick={() => {\n                        ExtensionPlatform.openTab({\n                            url: `${config.scanUrl}${address}`,\n                        });\n                    }}\n                >\n                    View in explorer <LinkIcon/>\n                </ButtonNegative>\n                <ButtonPositive\n                    onClick={() => {\n                        navigate(homeRoute);\n                    }}\n                >\n                    Close\n                </ButtonPositive>\n            </ButtonColumn>\n            <Gap/>\n        </Body>\n    );\n};\n","import { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { Address, beginCell, toNano } from \"@ton/core\";\nimport { TonClient } from \"@ton/ton\";\nimport { useContext } from \"react\";\nimport { JettonAsset } from \"../../../../../../../libs/entries/asset\";\nimport { EstimateFeeValues } from \"../../../../../../../libs/entries/tonCenter\";\nimport { WalletState } from \"../../../../../../../libs/entries/wallet\";\nimport { getWalletContract } from \"../../../../../../../libs/service/transfer/core\";\nimport {\n  SendJettonState,\n  createJettonTransfer,\n  createLedgerJettonTransfer,\n} from \"../../../../../../../libs/service/transfer/jettonService\";\nimport { toCoinValue } from \"../../../../../../../libs/state/decimalsService\";\nimport { QueryType } from \"../../../../../../../libs/store/browserStore\";\nimport {\n  TonClientContext,\n  WalletStateContext,\n} from \"../../../../../../context\";\nimport { checkBalanceOrDie2, getWalletKeyPair } from \"../../../../../api\";\nimport { signLedgerTransaction } from \"../../../../../ledger/api\";\n\nexport const toSendJettonState = (\n  searchParams: URLSearchParams\n): SendJettonState => {\n  return {\n    address: decodeURIComponent(searchParams.get(\"address\") ?? \"\"),\n    amount: decodeURIComponent(searchParams.get(\"amount\") ?? \"\"),\n    transactionAmount: decodeURIComponent(\n      searchParams.get(\"transactionAmount\") ?? \"0.1\"\n    ),\n    comment: decodeURIComponent(searchParams.get(\"comment\") ?? \"\"),\n  };\n};\n\nexport const stateToSearch = (state: SendJettonState) => {\n  return Object.entries(state).reduce((acc, [key, value]) => {\n    acc[key] = encodeURIComponent(value);\n    return acc;\n  }, {} as Record<string, string>);\n};\n\nconst getJettonWalletAddress = async (\n  tonClient: TonClient,\n  jettonMinter: string,\n  wallet: string\n) => {\n  const result = await tonClient.callGetMethod(\n    Address.parse(jettonMinter),\n    \"get_wallet_address\",\n    [\n      {\n        type: \"slice\",\n        cell: beginCell().storeAddress(Address.parse(wallet)).endCell(),\n      },\n    ]\n  );\n\n  const jettonWalletAddress = result.stack.readAddress();\n  return jettonWalletAddress;\n};\n\nconst getJettonMasterAddress = async (\n  tonClient: TonClient,\n  jettonWallet: Address\n) => {\n  const jettonData = await tonClient.callGetMethod(\n    jettonWallet,\n    \"get_wallet_data\"\n  );\n\n  const balance = jettonData.stack.readBigNumber();\n  const owner = jettonData.stack.readAddress();\n  const jettonMaster = jettonData.stack.readAddress();\n  return jettonMaster;\n};\n\nexport const useJettonWalletAddress = (jetton: JettonAsset) => {\n  const tonClient = useContext(TonClientContext);\n  const wallet = useContext(WalletStateContext);\n\n  return useQuery<Address, Error>([QueryType.account, jetton], async () => {\n    const jettonWalletAddress = await getJettonWalletAddress(\n      tonClient,\n      jetton.minterAddress,\n      wallet.address\n    );\n    const jettonMasterAddress = await getJettonMasterAddress(\n      tonClient,\n      jettonWalletAddress\n    );\n    if (\n      jettonMasterAddress.toString() !==\n      Address.parse(jetton.minterAddress).toString()\n    ) {\n      throw new Error(\"Jetton minter address not match\");\n    }\n    return jettonWalletAddress;\n  });\n};\n\nexport const useEstimateJettonFee = (\n  jetton: JettonAsset,\n  state: SendJettonState\n) => {\n  const tonClient = useContext(TonClientContext);\n  const wallet = useContext(WalletStateContext);\n\n  return useQuery([QueryType.estimation, jetton], async () => {\n    if (!jetton.walletAddress) {\n      throw new Error(\"Missing jetton wallet address\");\n    }\n\n    const transaction = createJettonTransfer(\n      0,\n      wallet,\n      jetton.walletAddress,\n      Address.parse(wallet.address),\n      state,\n      jetton\n    );\n    const data = await tonClient.estimateExternalMessageFee(\n      Address.parse(wallet.address),\n      {\n        body: transaction,\n        initCode: null,\n        initData: null,\n        ignoreSignature: true,\n      }\n    );\n    return data.source_fees as EstimateFeeValues;\n  });\n};\n\nconst sendLedgerTransaction = async (\n  tonClient: TonClient,\n  wallet: WalletState,\n  jetton: JettonAsset,\n  state: SendJettonState,\n  balance: string,\n  jettonWalletAddress: Address,\n  address: string\n): Promise<number> => {\n  const contract = getWalletContract(wallet);\n  const tonContract = tonClient.open(contract);\n\n  const walletBalance = await tonContract.getBalance();\n\n  await checkBalanceOrDie2(\n    walletBalance.toString(),\n    toNano(state.transactionAmount)\n  );\n  const jettonAmount = toCoinValue(state.amount, jetton.state.decimals);\n  await checkBalanceOrDie2(balance, jettonAmount);\n\n  const seqno = await tonContract.getSeqno();\n\n  const transaction = createLedgerJettonTransfer(\n    wallet,\n    seqno,\n    address,\n    jettonWalletAddress,\n    state,\n    jetton\n  );\n\n  const signed = await signLedgerTransaction(transaction);\n  await tonContract.send(signed);\n\n  return seqno;\n};\n\nconst sendMnemonicTransaction = async (\n  tonClient: TonClient,\n  wallet: WalletState,\n  jetton: JettonAsset,\n  state: SendJettonState,\n  balance: string,\n  jettonWalletAddress: Address,\n  address: string\n) => {\n  const keyPair = await getWalletKeyPair(wallet);\n  const secretKey = Buffer.from(keyPair.secretKey);\n\n  const contract = getWalletContract(wallet);\n  const tonContract = tonClient.open(contract);\n\n  const walletBalance = await tonContract.getBalance();\n\n  await checkBalanceOrDie2(\n    walletBalance.toString(),\n    toNano(state.transactionAmount)\n  );\n  const jettonAmount = toCoinValue(state.amount, jetton.state.decimals);\n  await checkBalanceOrDie2(balance, jettonAmount);\n\n  const seqno = await tonContract.getSeqno();\n\n  const transaction = createJettonTransfer(\n    seqno,\n    wallet,\n    address,\n    jettonWalletAddress,\n    state,\n    jetton,\n    secretKey\n  );\n\n  await tonContract.send(transaction);\n\n  return seqno;\n};\n\nexport const useSendJetton = (jetton: JettonAsset, state: SendJettonState) => {\n  const tonClient = useContext(TonClientContext);\n  const wallet = useContext(WalletStateContext);\n\n  return useMutation<\n    number,\n    Error,\n    { balance: string; jettonWalletAddress: Address; address: string }\n  >(async ({ balance, jettonWalletAddress, address }) => {\n    if (wallet.ledger) {\n      return sendLedgerTransaction(\n        tonClient,\n        wallet,\n        jetton,\n        state,\n        balance,\n        jettonWalletAddress,\n        address\n      );\n    } else {\n      return sendMnemonicTransaction(\n        tonClient,\n        wallet,\n        jetton,\n        state,\n        balance,\n        jettonWalletAddress,\n        address\n      );\n    }\n  });\n};\n","import React, { FC, useContext } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { JettonAsset } from \"../../../../../../../libs/entries/asset\";\nimport { SendJettonState } from \"../../../../../../../libs/service/transfer/jettonService\";\nimport { AddressTransfer } from \"../../../../../../components/Address\";\nimport {\n  Body,\n  ButtonPositive,\n  ButtonRow,\n  ErrorMessage,\n  Gap,\n  TextLine,\n} from \"../../../../../../components/Components\";\nimport { Dots } from \"../../../../../../components/Dots\";\nimport { Fees } from \"../../../../../../components/send/Fees\";\nimport {\n  SendCancelButton,\n  SendEditButton,\n} from \"../../../../../../components/send/SendButtons\";\nimport { WalletStateContext } from \"../../../../../../context\";\nimport { FingerprintLabel } from \"../../../../../../FingerprintLabel\";\nimport { fiatFees } from \"../../../../../../utils\";\nimport { useTargetAddress } from \"../../../send/api\";\nimport {\n  toSendJettonState,\n  useEstimateJettonFee,\n  useJettonWalletAddress,\n  useSendJetton,\n} from \"./api\";\n\nconst EditButton = React.memo(() => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const onEdit = () => {\n    const state = toSendJettonState(searchParams);\n    setSearchParams({ ...state }); // Remove submit flag from params\n  };\n  return <SendEditButton onEdit={onEdit} />;\n});\n\nconst Quote = styled.div`\n  margin-bottom: ${(props) => props.theme.padding};\n`;\n\ninterface ConfirmProps {\n  jetton: JettonAsset;\n  state: SendJettonState;\n  balance?: string;\n  onSend: (seqNo: number, transactionId?: string) => void;\n}\n\nexport const SendJettonConfirm: FC<ConfirmProps> = ({\n  jetton,\n  state,\n  balance,\n  onSend,\n}) => {\n  const wallet = useContext(WalletStateContext);\n\n  const {\n    data: address,\n    error: addressError,\n    isFetching: isAddressFetching,\n  } = useTargetAddress(state.address);\n\n  const {\n    data: jettonWalletAddress,\n    error: jettonError,\n    isFetching: isJettonFetching,\n  } = useJettonWalletAddress(jetton);\n  const { data } = useEstimateJettonFee(jetton, state);\n\n  const {\n    mutateAsync,\n    isLoading: isSending,\n    error: sendError,\n  } = useSendJetton(jetton, state);\n\n  const onConfirm = async () => {\n    if (!balance || !address || !jettonWalletAddress) return;\n    const seqNo = await mutateAsync({ balance, address, jettonWalletAddress });\n    onSend(seqNo);\n  };\n\n  const transaction =\n    state.transactionAmount != \"\" ? parseFloat(state.transactionAmount) : 0.1;\n\n  const isLoading = isAddressFetching || isSending || isJettonFetching;\n  const disabled = isLoading || addressError != null || jettonError != null;\n\n  return (\n    <>\n      <EditButton />\n      <Body>\n        <AddressTransfer left={wallet.name} right={state.address} />\n        <TextLine>SENDING {jetton.state.symbol}:</TextLine>\n\n        <TextLine>\n          <b>\n            {state.amount} {jetton.state.symbol}\n          </b>\n        </TextLine>\n        <Fees estimation={data} />\n        <TextLine>Transaction fee estimation:</TextLine>\n        <TextLine>\n          Max: ~<b>{fiatFees.format(transaction)} ION*</b>\n        </TextLine>\n        <Quote>\n          * The wallet sends an amount of ION to cover internal transaction\n          costs. The rest of the ION that will not be used will be returned to\n          the wallet.\n        </Quote>\n\n        {addressError && <ErrorMessage>{addressError.message}</ErrorMessage>}\n        {jettonError && <ErrorMessage>{jettonError.message}</ErrorMessage>}\n        {sendError && <ErrorMessage>{sendError.message}</ErrorMessage>}\n\n        <Gap />\n        <ButtonRow>\n          <SendCancelButton disabled={isLoading} homeRoute=\"../\" />\n          <ButtonPositive disabled={disabled} onClick={onConfirm}>\n            {isAddressFetching || isJettonFetching ? (\n              <Dots>Validating</Dots>\n            ) : isSending ? (\n              <Dots>Loading</Dots>\n            ) : (\n              <FingerprintLabel>Confirm</FingerprintLabel>\n            )}\n          </ButtonPositive>\n        </ButtonRow>\n      </Body>\n    </>\n  );\n};\n","import { FC, useCallback, useContext, useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { JettonAsset } from \"../../../../../../../libs/entries/asset\";\nimport { SendJettonState } from \"../../../../../../../libs/service/transfer/jettonService\";\nimport {\n  Body,\n  ButtonBottomRow,\n  ButtonPositive,\n  Gap,\n  H1,\n} from \"../../../../../../components/Components\";\nimport { InputField } from \"../../../../../../components/InputField\";\nimport { SendCancelButton } from \"../../../../../../components/send/SendButtons\";\nimport { SendLoadingView } from \"../../../../../../components/send/SendLoadingView\";\nimport { SendSuccessView } from \"../../../../../../components/send/SendSuccessView\";\nimport { WalletStateContext } from \"../../../../../../context\";\nimport { sendBackground } from \"../../../../../../event\";\nimport { useJettonWalletBalance } from \"../../api\";\nimport { JettonMinterAddressContext, JettonStateContext } from \"../context\";\nimport { stateToSearch, toSendJettonState } from \"./api\";\nimport { SendJettonConfirm } from \"./SendJettonConfirm\";\n\ninterface InputProps {\n  jetton: JettonAsset;\n  state: SendJettonState;\n\n  onChange: (field: Partial<SendJettonState>) => void;\n  onSend: () => void;\n}\n\nconst SendJettonInputView: FC<InputProps> = ({\n  jetton,\n  state,\n  onChange,\n  onSend,\n}) => {\n  return (\n    <Body>\n      <H1>Send {jetton.state.symbol}</H1>\n\n      <InputField\n        label=\"Enter wallet address\"\n        value={state.address}\n        onChange={(e) => onChange({ address: e.target.value })}\n      />\n\n      <InputField\n        label=\"Amount\"\n        type=\"number\"\n        value={state.amount}\n        onChange={(e) => onChange({ amount: e.target.value })}\n      />\n\n      <InputField\n        label=\"Transaction Amount\"\n        type=\"number\"\n        value={state.transactionAmount}\n        onChange={(e) => onChange({ transactionAmount: e.target.value })}\n      />\n\n      <Gap />\n      <ButtonBottomRow>\n        <SendCancelButton homeRoute=\"../\" />\n        <ButtonPositive onClick={onSend}>Next</ButtonPositive>\n      </ButtonBottomRow>\n    </Body>\n  );\n};\n\nexport const JettonSend = () => {\n  const wallet = useContext(WalletStateContext);\n  const minterAddress = useContext(JettonMinterAddressContext);\n  const jetton = useContext(JettonStateContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { data: balance } = useJettonWalletBalance(jetton);\n\n  const seqNo = searchParams.get(\"seqNo\");\n  const confirm = searchParams.get(\"confirm\");\n\n  const submit = searchParams.get(\"submit\") === \"1\";\n\n  const state = useMemo(() => {\n    return toSendJettonState(searchParams);\n  }, [searchParams]);\n\n  const onSubmit = useCallback(() => {\n    const params = { ...stateToSearch(state), submit: \"1\" };\n\n    sendBackground.message(\"storeOperation\", {\n      kind: \"sendJetton\",\n      value: { wallet: wallet.address, minterAddress, params },\n    });\n\n    setSearchParams(params);\n  }, [setSearchParams, state]);\n\n  const onChange = useCallback(\n    (field: Partial<SendJettonState>) => {\n      const params = stateToSearch({ ...state, ...field });\n\n      sendBackground.message(\"storeOperation\", {\n        kind: \"sendJetton\",\n        value: { wallet: wallet.address, minterAddress, params },\n      });\n\n      setSearchParams(params);\n    },\n    [setSearchParams, state]\n  );\n\n  const onSend = useCallback(\n    (seqNo: number) => {\n      const params = { seqNo: String(seqNo) };\n\n      sendBackground.message(\"storeOperation\", null);\n      setSearchParams(params);\n    },\n    [setSearchParams]\n  );\n\n  const onConfirm = useCallback(() => {\n    sendBackground.message(\"storeOperation\", null);\n\n    setSearchParams({ confirm: String(seqNo) });\n  }, [setSearchParams, seqNo]);\n\n  if (confirm !== null) {\n    return <SendSuccessView address={wallet.address} />;\n  }\n\n  if (seqNo !== null) {\n    return (\n      <SendLoadingView\n        address={wallet.address}\n        seqNo={seqNo}\n        onConfirm={onConfirm}\n      />\n    );\n  }\n\n  if (!submit) {\n    return (\n      <SendJettonInputView\n        state={state}\n        jetton={jetton}\n        onChange={onChange}\n        onSend={onSubmit}\n      />\n    );\n  }\n\n  return (\n    <SendJettonConfirm\n      state={state}\n      jetton={jetton}\n      balance={balance}\n      onSend={onSend}\n    />\n  );\n};\n","import { FC, useContext, useMemo } from \"react\";\nimport { Route, Routes, useNavigate, useParams } from \"react-router-dom\";\nimport { JettonAsset } from \"../../../../../../libs/entries/asset\";\nimport { getWalletAssets } from \"../../../../../../libs/entries/wallet\";\nimport { seeIfJettonAsset } from \"../../../../../../libs/state/assetService\";\nimport { Body } from \"../../../../../components/Components\";\nimport { HomeButton } from \"../../../../../components/HomeButton\";\nimport { WalletStateContext } from \"../../../../../context\";\nimport { AppRoute } from \"../../../../../routes\";\nimport { ReceiveCoin } from \"../../receive/Receive\";\nimport { JettonMinterAddressContext, JettonStateContext } from \"./context\";\nimport { JettonHide } from \"./JettonHide\";\nimport { JettonHome } from \"./JettonHome\";\nimport { JettonRoute } from \"./route\";\nimport { JettonSend } from \"./send/SendJetton\";\n\nconst ReceiveJetton: FC<{ symbol: string }> = ({ symbol }) => {\n  return (\n    <>\n      <HomeButton path=\"../\" text=\"Back\" />\n      <Body>\n        <ReceiveCoin symbol={symbol} />\n      </Body>\n    </>\n  );\n};\n\nexport const JettonRouter = () => {\n  const navigate = useNavigate();\n  const wallet = useContext(WalletStateContext);\n  const params = useParams();\n\n  const minterAddress = useMemo(() => {\n    return decodeURIComponent(params.minterAddress!);\n  }, [params]);\n\n  const jetton = useMemo(() => {\n    const asset = getWalletAssets(wallet).find(\n      (asset) =>\n        seeIfJettonAsset(asset) && asset.minterAddress === minterAddress\n    );\n    if (!asset) {\n      navigate(AppRoute.home);\n    }\n    return asset as JettonAsset;\n  }, [wallet]);\n\n  if (!jetton) return <></>;\n\n  return (\n    <JettonStateContext.Provider value={jetton}>\n      <JettonMinterAddressContext.Provider value={minterAddress}>\n        <Routes>\n          <Route path={JettonRoute.send} element={<JettonSend />} />\n          <Route\n            path={JettonRoute.receive}\n            element={<ReceiveJetton symbol={jetton.state.symbol} />}\n          />\n          <Route path={JettonRoute.hide} element={<JettonHide />} />\n          <Route path=\"*\" element={<JettonHome />} />\n        </Routes>\n      </JettonMinterAddressContext.Provider>\n    </JettonStateContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { NftAsset, NftItem } from \"../../../../../../libs/entries/asset\";\n\nexport const NftStateContext = React.createContext<NftAsset>(undefined!);\nexport const NftItemStateContext = React.createContext<NftItem>(undefined!);\n","import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\nimport { NftItem } from \"../../../../../../libs/entries/asset\";\nimport { TonWebTransaction } from \"../../../../../../libs/entries/transaction\";\nimport {\n  deleteNftAsset,\n  DeleteNftProps,\n} from \"../../../../../../libs/state/assetService\";\nimport { QueryType } from \"../../../../../../libs/store/browserStore\";\nimport {\n  AccountStateContext,\n  NetworkContext,\n  TonProviderContext,\n} from \"../../../../../context\";\nimport { saveAccountState } from \"../../../../api\";\n\nexport const useNFtTransactions = (state: NftItem, limit: number = 10) => {\n  const network = useContext(NetworkContext);\n  const ton = useContext(TonProviderContext);\n\n  return useQuery<TonWebTransaction[], Error>(\n    [network, state.address, QueryType.transactions],\n    () => ton.getTransactions(state.address, limit)\n  );\n};\n\nexport const useHideNftMutation = () => {\n  const network = useContext(NetworkContext);\n  const account = useContext(AccountStateContext);\n  const client = useQueryClient();\n\n  return useMutation<void, Error, DeleteNftProps>(async (options) => {\n    const value = deleteNftAsset(account, options);\n    await saveAccountState(network, client, value);\n  });\n};\n","import { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Body,\n  ButtonNegative,\n  ButtonPositive,\n  ButtonRow,\n  Gap,\n  H1,\n  Text,\n} from \"../../../../../components/Components\";\nimport { AppRoute } from \"../../../../../routes\";\nimport { useHideNftMutation } from \"./api\";\nimport { NftItemStateContext, NftStateContext } from \"./context\";\n\nexport const NftHide = () => {\n  const { collectionAddress } = useContext(NftStateContext);\n  const { address, state } = useContext(NftItemStateContext);\n  const navigate = useNavigate();\n\n  const { mutateAsync, isLoading } = useHideNftMutation();\n\n  const onDelete = async () => {\n    await mutateAsync({ collectionAddress, address });\n    navigate(AppRoute.home);\n  };\n\n  return (\n    <Body>\n      <H1>Hide NFT</H1>\n      <Text>\n        Hiding <b>{state?.name ?? \"Unknown\"}</b> NFT will clear local stored\n        data.\n      </Text>\n      <Text>The NFT could be re-enter by NFT Contract address.</Text>\n      <Gap />\n      <ButtonRow>\n        <ButtonNegative onClick={() => navigate(\"../\")} disabled={isLoading}>\n          Cancel\n        </ButtonNegative>\n        <ButtonPositive onClick={onDelete} disabled={isLoading}>\n          Hide\n        </ButtonPositive>\n      </ButtonRow>\n    </Body>\n  );\n};\n","import { useCallback, useContext } from \"react\";\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\nimport { ActivitiesList } from \"../../../../../components/ActivitiesList\";\nimport { AddressBlock } from \"../../../../../components/AddressBlock\";\nimport {\n  BallanceBlock,\n  BallanceButton,\n  BallanceButtonRow,\n} from \"../../../../../components/BalanceButton\";\nimport {\n  Body,\n  ButtonColumn,\n  ButtonNegative,\n  Scroll,\n} from \"../../../../../components/Components\";\nimport { HomeButton } from \"../../../../../components/HomeButton\";\nimport {\n  DeleteIcon,\n  ReceiveIcon,\n  SendIcon,\n} from \"../../../../../components/Icons\";\nimport { NftPayload } from \"../../../../../components/NftPayload\";\nimport { Tabs } from \"../../../../../components/Tabs\";\nimport { relative } from \"../../../../../routes\";\nimport { useNFtTransactions } from \"./api\";\nimport { NftItemStateContext, NftStateContext } from \"./context\";\nimport { NftItemRoute } from \"./router\";\n\nconst NftActivities = () => {\n  const state = useContext(NftItemStateContext);\n  const { data, isLoading } = useNFtTransactions(state);\n  return (\n    <ActivitiesList data={data} isLoading={isLoading} address={state.address} />\n  );\n};\n\nconst NftHeader = () => {\n  const navigate = useNavigate();\n  const nft = useContext(NftItemStateContext);\n  return (\n    <BallanceBlock>\n      <NftPayload state={nft.state} />\n      <BallanceButtonRow>\n        <BallanceButton\n          label=\"Receive\"\n          onClick={() => navigate(relative(NftItemRoute.receive))}\n        >\n          <ReceiveIcon />\n        </BallanceButton>\n        <BallanceButton\n          label=\"Transfer\"\n          onClick={() => navigate(relative(NftItemRoute.send))}\n        >\n          <SendIcon />\n        </BallanceButton>\n      </BallanceButtonRow>\n    </BallanceBlock>\n  );\n};\n\nconst NftInfo = () => {\n  const navigate = useNavigate();\n  const collection = useContext(NftStateContext);\n  const nft = useContext(NftItemStateContext);\n\n  return (\n    <Body>\n      <AddressBlock\n        label=\"NFT Collection\"\n        address={collection.collectionAddress}\n      />\n      <AddressBlock label=\"NFT Contract\" address={nft.address} />\n      <ButtonColumn>\n        <ButtonNegative onClick={() => navigate(`..${NftItemRoute.hide}`)}>\n          Hide <DeleteIcon />\n        </ButtonNegative>\n      </ButtonColumn>\n    </Body>\n  );\n};\n\nconst tabs = [\"Activity\", \"Info\"];\n\nexport const NftHome = () => {\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  const onChange = useCallback(\n    (tab: typeof tabs[number]) => {\n      navigate(\n        tab === \"Info\"\n          ? relative(NftItemRoute.info)\n          : relative(NftItemRoute.index),\n        {\n          replace: true,\n        }\n      );\n    },\n    [navigate]\n  );\n\n  const active = location.pathname.includes(NftItemRoute.info)\n    ? tabs[1]\n    : tabs[0];\n\n  return (\n    <Scroll>\n      <HomeButton />\n      <NftHeader />\n      <Tabs options={tabs} active={active} onChange={onChange} />\n      <Routes>\n        <Route path={NftItemRoute.info} element={<NftInfo />} />\n        <Route path=\"*\" element={<NftActivities />} />\n      </Routes>\n    </Scroll>\n  );\n};\n","import { FC } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { NftAsset } from \"../../../../../../libs/entries/asset\";\nimport { Body, H1, Scroll } from \"../../../../../components/Components\";\nimport { HomeButton } from \"../../../../../components/HomeButton\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-auto-rows: 160px;\n  gap: ${(props) => props.theme.padding};\n`;\n\nconst Item = styled.div`\n  cursor: pointer;\n  padding: 5;\n  border: 1px solid ${(props) => props.theme.darkGray};\n  border-radius: 20px;\n  text-align: center;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst ItemImage = styled.img`\n  max-height: 130px;\n  max-width: 100%;\n`;\n\nconst TextLine = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  line-height: 20px;\n  padding: 0 10px;\n  overflow: hidden;\n`;\n\nexport const NftList: FC<{ asset: NftAsset }> = ({ asset }) => {\n  const navigate = useNavigate();\n  return (\n    <Scroll>\n      <HomeButton />\n      <Body>\n        <H1>{asset.state?.name ?? \"Collection\"}</H1>\n        <Grid>\n          {asset.items.map(({ state, address }) => {\n            if (!state) {\n              return (\n                <Item key={address}>\n                  <TextLine>Missing NFT data</TextLine>\n                </Item>\n              );\n            } else {\n              return (\n                <Item\n                  key={address}\n                  onClick={() => navigate(`./${encodeURIComponent(address)}`)}\n                >\n                  {state.name && <TextLine>{state.name}</TextLine>}\n                  {\"image\" in state && (\n                    <ItemImage src={state.image} alt=\"NFT image\" />\n                  )}\n                  {\"domain\" in state && (\n                    <>\n                      {state.domain}.{state.root}\n                    </>\n                  )}\n                </Item>\n              );\n            }\n          })}\n        </Grid>\n      </Body>\n    </Scroll>\n  );\n};\n","import { toNano } from \"@openproduct/web-sdk\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport { Address } from \"@ton/core\";\nimport { TonClient } from \"@ton/ton\";\nimport { useContext } from \"react\";\nimport { NftItem } from \"../../../../../../../libs/entries/asset\";\nimport { EstimateFeeValues } from \"../../../../../../../libs/entries/tonCenter\";\nimport { WalletState } from \"../../../../../../../libs/entries/wallet\";\nimport { getWalletContract } from \"../../../../../../../libs/service/transfer/core\";\nimport {\n  SendNftState,\n  createLedgerNftTransfer,\n  createNftTransfer,\n} from \"../../../../../../../libs/service/transfer/nftService\";\nimport { QueryType } from \"../../../../../../../libs/store/browserStore\";\nimport {\n  TonClientContext,\n  WalletStateContext,\n} from \"../../../../../../context\";\nimport { checkBalanceOrDie, getWalletKeyPair } from \"../../../../../api\";\nimport { signLedgerTransaction } from \"../../../../../ledger/api\";\n\nexport const toSendNftState = (searchParams: URLSearchParams): SendNftState => {\n  return {\n    address: decodeURIComponent(searchParams.get(\"address\") ?? \"\"),\n    amount: decodeURIComponent(searchParams.get(\"amount\") ?? \"0.05\"),\n    forwardAmount: decodeURIComponent(\n      searchParams.get(\"forwardAmount\") ?? \"0.0001\"\n    ),\n    comment: decodeURIComponent(searchParams.get(\"comment\") ?? \"\"),\n  };\n};\n\nexport const stateToSearch = (state: SendNftState) => {\n  return Object.entries(state).reduce((acc, [key, value]) => {\n    acc[key] = encodeURIComponent(value);\n    return acc;\n  }, {} as Record<string, string>);\n};\n\nexport const useEstimateNftFee = (state: SendNftState, nft: NftItem) => {\n  const tonClient = useContext(TonClientContext);\n  const wallet = useContext(WalletStateContext);\n\n  return useQuery([QueryType.estimation, nft], async () => {\n    const transaction = createNftTransfer(\n      0,\n      wallet,\n      wallet.address,\n      state,\n      nft\n    );\n    const data = await tonClient.estimateExternalMessageFee(\n      Address.parse(wallet.address),\n      {\n        body: transaction,\n        initCode: null,\n        initData: null,\n        ignoreSignature: true,\n      }\n    );\n    return data.source_fees as EstimateFeeValues;\n  });\n};\n\nconst sendLedgerTransaction = async (\n  tonClient: TonClient,\n  wallet: WalletState,\n  state: SendNftState,\n  nft: NftItem,\n  address: string\n) => {\n  const contract = getWalletContract(wallet);\n  const tonContract = tonClient.open(contract);\n\n  const walletBalance = await tonContract.getBalance();\n\n  await checkBalanceOrDie(walletBalance.toString(), toNano(state.amount));\n\n  const seqno = await tonContract.getSeqno();\n\n  const transaction = createLedgerNftTransfer(\n    wallet,\n    seqno,\n    address,\n    state,\n    nft\n  );\n\n  const signed = await signLedgerTransaction(transaction);\n  await tonContract.send(signed);\n\n  return seqno;\n};\nconst sendMnemonicTransaction = async (\n  tonClient: TonClient,\n  wallet: WalletState,\n  state: SendNftState,\n  nft: NftItem,\n  address: string\n) => {\n  const keyPair = await getWalletKeyPair(wallet);\n  const secretKey = Buffer.from(keyPair.secretKey);\n\n  const contract = getWalletContract(wallet);\n  const tonContract = tonClient.open(contract);\n\n  const walletBalance = await tonContract.getBalance();\n\n  await checkBalanceOrDie(walletBalance.toString(), toNano(state.amount));\n\n  const seqno = await tonContract.getSeqno();\n\n  const transaction = createNftTransfer(\n    seqno,\n    wallet,\n    address,\n    state,\n    nft,\n    secretKey\n  );\n\n  await tonContract.send(transaction);\n\n  return seqno;\n};\nexport const useSendNft = (state: SendNftState, nft: NftItem) => {\n  const tonClient = useContext(TonClientContext);\n  const wallet = useContext(WalletStateContext);\n\n  return useMutation<number, Error, string>(async (address) => {\n    if (wallet.ledger) {\n      return sendLedgerTransaction(tonClient, wallet, state, nft, address);\n    } else {\n      return sendMnemonicTransaction(tonClient, wallet, state, nft, address);\n    }\n  });\n};\n","import React, { FC, useContext } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { NftItem } from \"../../../../../../../libs/entries/asset\";\nimport { SendNftState } from \"../../../../../../../libs/service/transfer/nftService\";\nimport { AddressTransfer } from \"../../../../../../components/Address\";\nimport {\n  Body,\n  ButtonPositive,\n  ButtonRow,\n  ErrorMessage,\n  Gap,\n  TextLine,\n} from \"../../../../../../components/Components\";\nimport { Dots } from \"../../../../../../components/Dots\";\nimport { Fees } from \"../../../../../../components/send/Fees\";\nimport {\n  SendCancelButton,\n  SendEditButton,\n} from \"../../../../../../components/send/SendButtons\";\nimport { WalletStateContext } from \"../../../../../../context\";\nimport { FingerprintLabel } from \"../../../../../../FingerprintLabel\";\nimport { fiatFees } from \"../../../../../../utils\";\nimport { useTargetAddress } from \"../../../send/api\";\nimport { toSendNftState, useEstimateNftFee, useSendNft } from \"./api\";\n\nconst EditButton = React.memo(() => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const onEdit = () => {\n    const state = toSendNftState(searchParams);\n    setSearchParams({ ...state }); // Remove submit flag from params\n  };\n  return <SendEditButton onEdit={onEdit} />;\n});\n\nconst Quote = styled.div`\n  margin-bottom: ${(props) => props.theme.padding};\n`;\n\ninterface ConfirmProps {\n  nft: NftItem;\n  state: SendNftState;\n  balance?: string;\n  onSend: (seqNo: number) => void;\n}\n\nexport const SendNftConfirm: FC<ConfirmProps> = ({ nft, state, onSend }) => {\n  const wallet = useContext(WalletStateContext);\n\n  const {\n    data: address,\n    error: addressError,\n    isFetching: isAddressFetching,\n  } = useTargetAddress(state.address);\n\n  const { data } = useEstimateNftFee(state, nft);\n\n  const { mutateAsync, isLoading: isSending, error } = useSendNft(state, nft);\n  const onConfirm = async () => {\n    if (!address) return;\n    const seqNo = await mutateAsync(address);\n    onSend(seqNo);\n  };\n\n  const transaction = parseFloat(state.amount);\n\n  const isLoading = isAddressFetching || isSending;\n  const disabled = isLoading || addressError != null;\n\n  return (\n    <>\n      <EditButton />\n      <Body>\n        <AddressTransfer left={wallet.name} right={state.address} />\n        <TextLine>SENDING NFT:</TextLine>\n        <TextLine>\n          <b>{nft.state?.name ?? \"Unknown\"}</b>\n        </TextLine>\n\n        <Fees estimation={data} />\n        <TextLine>Transaction fee estimation:</TextLine>\n        <TextLine>\n          Max: ~<b>{fiatFees.format(transaction)} ION*</b>\n        </TextLine>\n        <Quote>\n          * The wallet sends an amount of ION to cover internal transaction and\n          network storage costs. The rest of the ION that will not be used will\n          be returned to the wallet.\n        </Quote>\n\n        {addressError && <ErrorMessage>{addressError.message}</ErrorMessage>}\n        {error && <ErrorMessage>{error.message}</ErrorMessage>}\n\n        <Gap />\n        <ButtonRow>\n          <SendCancelButton disabled={isLoading} homeRoute=\"../\" />\n          <ButtonPositive disabled={disabled} onClick={onConfirm}>\n            {isAddressFetching ? (\n              <Dots>Validating</Dots>\n            ) : isSending ? (\n              <Dots>Loading</Dots>\n            ) : (\n              <FingerprintLabel>Confirm</FingerprintLabel>\n            )}\n          </ButtonPositive>\n        </ButtonRow>\n      </Body>\n    </>\n  );\n};\n","import { FC, useCallback, useContext, useMemo } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { NftItem } from \"../../../../../../../libs/entries/asset\";\nimport ExtensionPlatform from \"../../../../../../../libs/service/extension\";\nimport { SendNftState } from \"../../../../../../../libs/service/transfer/nftService\";\nimport {\n  Body,\n  ButtonBottomRow,\n  ButtonColumn,\n  ButtonNegative,\n  ButtonPositive,\n  Center,\n  ErrorMessage,\n  Gap,\n  H1,\n  Text,\n} from \"../../../../../../components/Components\";\nimport { DeleteIcon, LinkIcon } from \"../../../../../../components/Icons\";\nimport { InputField } from \"../../../../../../components/InputField\";\nimport { LoadingLogo } from \"../../../../../../components/Logo\";\nimport { SendCancelButton } from \"../../../../../../components/send/SendButtons\";\nimport { SendLoadingView } from \"../../../../../../components/send/SendLoadingView\";\nimport { WalletStateContext } from \"../../../../../../context\";\nimport { sendBackground } from \"../../../../../../event\";\nimport { AppRoute } from \"../../../../../../routes\";\nimport { useBalance, useSelectedNetworkConfig } from \"../../../../api\";\nimport { useHideNftMutation } from \"../api\";\nimport { NftItemStateContext, NftStateContext } from \"../context\";\nimport { stateToSearch, toSendNftState } from \"./api\";\nimport { SendNftConfirm } from \"./SendNftConfirm\";\n\ninterface SuccessProps {\n  collectionAddress: string;\n  address: string;\n  walletAddress: string;\n}\n\nconst SuccessView: FC<SuccessProps> = ({\n  collectionAddress,\n  address,\n  walletAddress,\n}) => {\n  const navigate = useNavigate();\n  const config = useSelectedNetworkConfig();\n\n  const {\n    mutateAsync: hideNftMutationAsync,\n    reset,\n    error,\n  } = useHideNftMutation();\n\n  const onHide = async () => {\n    reset();\n\n    await hideNftMutationAsync({ collectionAddress, address });\n\n    navigate(AppRoute.home);\n  };\n\n  return (\n    <Body>\n      <Gap />\n        <img src=\"ion-logo.svg\" alt=\"ION\" width={117} height={117}/>\n        <Center>\n            <H1>Confirm</H1>\n            <Text>Transaction finished</Text>\n      </Center>\n      <ButtonColumn>\n        <ButtonNegative\n          onClick={() => {\n            ExtensionPlatform.openTab({\n              url: `${config.scanUrl}${walletAddress}`,\n            });\n          }}\n        >\n          View in explorer <LinkIcon />\n        </ButtonNegative>\n        <ButtonPositive onClick={onHide}>\n          Hide NFT <DeleteIcon />\n        </ButtonPositive>\n      </ButtonColumn>\n      {error && <ErrorMessage>{error.message}</ErrorMessage>}\n      <Gap />\n    </Body>\n  );\n};\n\ninterface InputProps {\n  nft: NftItem;\n  state: SendNftState;\n\n  onChange: (field: Partial<SendNftState>) => void;\n  onSend: () => void;\n}\n\nconst SendNftInputView: FC<InputProps> = ({ nft, state, onChange, onSend }) => {\n  return (\n    <Body>\n      <H1>Transfer {nft.state?.name ?? \"Unknown\"}</H1>\n\n      <InputField\n        label=\"Enter wallet address\"\n        value={state.address}\n        onChange={(e) => onChange({ address: e.target.value })}\n      />\n\n      <InputField\n        label=\"Transaction Amount\"\n        type=\"number\"\n        value={state.amount}\n        onChange={(e) => onChange({ amount: e.target.value })}\n      />\n\n      <Gap />\n      <ButtonBottomRow>\n        <SendCancelButton homeRoute=\"../\" />\n        <ButtonPositive onClick={onSend}>Next</ButtonPositive>\n      </ButtonBottomRow>\n    </Body>\n  );\n};\n\nexport const NftSend = () => {\n  const wallet = useContext(WalletStateContext);\n  const collection = useContext(NftStateContext);\n  const nft = useContext(NftItemStateContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const { data: balance } = useBalance(wallet.address);\n\n  const seqNo = searchParams.get(\"seqNo\");\n  const confirm = searchParams.get(\"confirm\");\n\n  const submit = searchParams.get(\"submit\") === \"1\";\n\n  const state = useMemo(() => {\n    return toSendNftState(searchParams);\n  }, [searchParams]);\n\n  const onSubmit = useCallback(() => {\n    const params = { ...stateToSearch(state), submit: \"1\" };\n\n    sendBackground.message(\"storeOperation\", {\n      kind: \"sendNft\",\n      value: {\n        wallet: wallet.address,\n        collectionAddress: collection.collectionAddress,\n        address: nft.address,\n        params,\n      },\n    });\n\n    setSearchParams(params);\n  }, [setSearchParams, state]);\n\n  const onChange = useCallback(\n    (field: Partial<SendNftState>) => {\n      const params = stateToSearch({ ...state, ...field });\n\n      sendBackground.message(\"storeOperation\", {\n        kind: \"sendNft\",\n        value: {\n          wallet: wallet.address,\n          collectionAddress: collection.collectionAddress,\n          address: nft.address,\n          params,\n        },\n      });\n\n      setSearchParams(params);\n    },\n    [setSearchParams, state]\n  );\n\n  const onSend = useCallback(\n    (seqNo: number) => {\n      const params = { seqNo: String(seqNo) };\n\n      sendBackground.message(\"storeOperation\", null);\n\n      setSearchParams(params);\n    },\n    [setSearchParams]\n  );\n\n  const onConfirm = useCallback(async () => {\n    sendBackground.message(\"storeOperation\", null);\n    setSearchParams({ confirm: String(seqNo) });\n  }, [setSearchParams, seqNo]);\n\n  if (confirm !== null) {\n    return (\n      <SuccessView\n        collectionAddress={collection.collectionAddress}\n        address={nft.address}\n        walletAddress={wallet.address}\n      />\n    );\n  }\n\n  if (seqNo !== null) {\n    return (\n      <SendLoadingView\n        address={wallet.address}\n        seqNo={seqNo}\n        onConfirm={onConfirm}\n      />\n    );\n  }\n\n  if (!submit) {\n    return (\n      <SendNftInputView\n        state={state}\n        nft={nft}\n        onChange={onChange}\n        onSend={onSubmit}\n      />\n    );\n  }\n\n  return (\n    <SendNftConfirm nft={nft} state={state} onSend={onSend} balance={balance} />\n  );\n};\n","import { FC, useContext, useMemo } from \"react\";\nimport { Route, Routes, useNavigate, useParams } from \"react-router-dom\";\nimport { NftAsset } from \"../../../../../../libs/entries/asset\";\nimport { getWalletAssets } from \"../../../../../../libs/entries/wallet\";\nimport { seeIfJettonAsset } from \"../../../../../../libs/state/assetService\";\nimport { Body } from \"../../../../../components/Components\";\nimport { HomeButton } from \"../../../../../components/HomeButton\";\nimport { WalletStateContext } from \"../../../../../context\";\nimport { AppRoute } from \"../../../../../routes\";\nimport { ReceiveCoin } from \"../../receive/Receive\";\nimport { NftItemStateContext, NftStateContext } from \"./context\";\nimport { NftHide } from \"./NftHide\";\nimport { NftHome } from \"./NftHome\";\nimport { NftList } from \"./NftList\";\nimport { NftItemRoute } from \"./router\";\nimport { NftSend } from \"./send/SendNft\";\n\nconst ReceiveNft = () => {\n  return (\n    <>\n      <HomeButton path=\"../\" text=\"Back\" />\n      <Body>\n        <ReceiveCoin symbol=\"NFT\" />\n      </Body>\n    </>\n  );\n};\n\nconst NftItemRouter: FC<{ asset: NftAsset }> = ({ asset }) => {\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const itemAddress = useMemo(() => {\n    return decodeURIComponent(params.address!);\n  }, [params]);\n\n  const item = useMemo(() => {\n    const item = asset.items.find((item) => item.address === itemAddress);\n\n    if (!item) {\n      navigate(AppRoute.home);\n    }\n\n    return item;\n  }, [asset]);\n  if (!item) return <></>;\n\n  return (\n    <NftStateContext.Provider value={asset}>\n      <NftItemStateContext.Provider value={item}>\n        <Routes>\n          <Route path={NftItemRoute.send} element={<NftSend />} />\n          <Route path={NftItemRoute.receive} element={<ReceiveNft />} />\n          <Route path={NftItemRoute.hide} element={<NftHide />} />\n          <Route path=\"*\" element={<NftHome />} />\n        </Routes>\n      </NftItemStateContext.Provider>\n    </NftStateContext.Provider>\n  );\n};\n\nexport const NftRouter = () => {\n  const navigate = useNavigate();\n  const wallet = useContext(WalletStateContext);\n  const params = useParams();\n\n  const collectionAddress = useMemo(() => {\n    return decodeURIComponent(params.collectionAddress!);\n  }, [params]);\n\n  const asset = useMemo(() => {\n    const asset = getWalletAssets(wallet).find(\n      (asset) =>\n        !seeIfJettonAsset(asset) &&\n        asset.collectionAddress === collectionAddress\n    );\n    if (!asset) {\n      navigate(AppRoute.home);\n    }\n    return asset as NftAsset;\n  }, [wallet]);\n\n  if (!asset) return <></>;\n\n  return (\n    <Routes>\n      <Route index element={<NftList asset={asset} />} />\n      <Route path=\":address/*\" element={<NftItemRouter asset={asset} />} />\n    </Routes>\n  );\n};\n","import { Route, Routes } from \"react-router-dom\";\nimport { ImportJetton } from \"./import/Jetton\";\nimport { ImportNft } from \"./import/Nft\";\nimport { JettonRouter } from \"./jetton/Jetton\";\nimport { NftRouter } from \"./nft/Nft\";\nimport { AssetRoutes } from \"./route\";\n\nexport const AssetsRouter = () => {\n  return (\n    <Routes>\n      <Route path={AssetRoutes.jettons}>\n        <Route index element={<ImportJetton />} />\n        <Route path=\":minterAddress/*\" element={<JettonRouter />} />\n      </Route>\n      <Route path={AssetRoutes.nfts}>\n        <Route index element={<ImportNft />} />\n        <Route path=\":collectionAddress/*\" element={<NftRouter />} />\n      </Route>\n    </Routes>\n  );\n};\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport ExtensionPlatform from \"../../../../../libs/service/extension\";\nimport {\n  ButtonNegative,\n  Container,\n  H3,\n  Text,\n} from \"../../../../components/Components\";\nimport { HomeButton } from \"../../../../components/HomeButton\";\nimport { LinkIcon } from \"../../../../components/Icons\";\nimport { NetworkContext } from \"../../../../context\";\nimport { Dedust, StealthEX } from \"./Icons\";\n\nconst Body = styled(Container)`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Source = styled.div`\n  border-bottom: 1px solid ${(props) => props.theme.darkGray};\n  margin-bottom: 1rem;\n  padding-bottom: 1rem;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n  padding-bottom: 0.5rem;\n`;\n\nconst SubTitle = styled(H3)`\n  margin: 0;\n`;\n\nconst ChangeHero = styled.div`\n  background: #2f92f6;\n  border-radius: 5px;\n  padding: 5px;\n`;\n\nconst SwapIndex = () => {\n  const network = useContext(NetworkContext);\n\n  return (\n    <div>\n      <Source>\n        <Row>\n          <Dedust />\n          <SubTitle>DeDust.io</SubTitle>\n        </Row>\n        <Text>\n          The first and folk DEX in The Open Network. The service allows to swap\n          ION to oUSDT, oUSDC and other altcoins.\n        </Text>\n        <ButtonNegative\n          onClick={() =>\n            ExtensionPlatform.openTab({\n              url: `https://dedust.io/dex/swap?utm_source=openmask.app`,\n            })\n          }\n        >\n          Continue to DeDust.io <LinkIcon />\n        </ButtonNegative>\n      </Source>\n      <Source>\n        <Row>\n          <img\n            src=\"https://static.ston.fi/favicon/favicon-32x32.png\"\n            width=\"30\"\n          />\n          <SubTitle>ston.fi</SubTitle>\n        </Row>\n        <Text>An AMM DEX for the ION blockchain</Text>\n        <ButtonNegative\n          onClick={() =>\n            ExtensionPlatform.openTab({\n              url: `https://app.ston.fi/swap?utm_source=openmask.app`,\n            })\n          }\n        >\n          Continue to ston.fi <LinkIcon />\n        </ButtonNegative>\n      </Source>\n      <Source>\n        <Row>\n          <StealthEX />\n          <SubTitle>StealthEX</SubTitle>\n        </Row>\n        <Text>\n          StealthEX is an instant cryptocurrency exchange for limitless swaps.\n          Cross-chain ETH, BTC, BNB, TRON and other networks cross-crypto swaps.\n        </Text>\n        <ButtonNegative\n          title={network != \"mainnet\" ? \"Please switch to mainnet!\" : undefined}\n          disabled={network != \"mainnet\"}\n          onClick={() =>\n            ExtensionPlatform.openTab({\n              url: `https://stealthex.io/?ref=${process.env.REACT_APP_STEALTHEX_ID}&from=ton&to=btc`,\n            })\n          }\n        >\n          Continue to StealthEX <LinkIcon />\n        </ButtonNegative>\n      </Source>\n      <Source>\n        <Row>\n          <ChangeHero>\n            <img\n              src=\"https://pretty-picture.s3.eu-central-1.amazonaws.com/logo_bf4f0a8ce6.svg\"\n              height=\"30\"\n            />\n          </ChangeHero>\n        </Row>\n        <Text>\n          ChangeHero is an instant cryptocurrency exchange, cross-chain swap\n          service. Instantly Convert Bitcoin And Over 150 Popular Cryptos.\n        </Text>\n        <ButtonNegative\n          title={network != \"mainnet\" ? \"Please switch to mainnet!\" : undefined}\n          disabled={network != \"mainnet\"}\n          onClick={() =>\n            ExtensionPlatform.openTab({\n              url: `https://changehero.io/?ref=${process.env.REACT_APP_CHANGEHERO}&cur_from=ION `,\n            })\n          }\n        >\n          Continue to ChangeHero <LinkIcon />\n        </ButtonNegative>\n      </Source>\n    </div>\n  );\n};\n\nexport const SwapRouter = () => {\n  return (\n    <>\n      <HomeButton />\n      <Body>\n        <SwapIndex />\n      </Body>\n    </>\n  );\n};\n","import React, { FC, useContext } from \"react\";\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { TransactionState } from \"../../../../../libs/service/transfer/tonService\";\nimport { AddressTransfer } from \"../../../../components/Address\";\nimport { CodeBlock } from \"../../../../components/CodeBlock\";\nimport {\n  Body,\n  ButtonPositive,\n  ButtonRow,\n  ErrorMessage,\n  Gap,\n  TextLine,\n} from \"../../../../components/Components\";\nimport { Dots } from \"../../../../components/Dots\";\nimport { Fees } from \"../../../../components/send/Fees\";\nimport {\n  SendCancelButton,\n  SendEditButton,\n} from \"../../../../components/send/SendButtons\";\nimport { WalletStateContext } from \"../../../../context\";\nimport { FingerprintLabel } from \"../../../../FingerprintLabel\";\nimport { fiatFees } from \"../../../../utils\";\nimport { useTransactionAnalytics } from \"../../../Analytics\";\nimport {\n  toState,\n  useEstimateTransaction,\n  useSendTransaction,\n  useTargetAddress,\n} from \"./api\";\n\nconst EditButton = React.memo(() => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const onEdit = () => {\n    const state = toState(searchParams);\n    setSearchParams({\n      ...state,\n      isEncrypt: state.isEncrypt ? \"1\" : \"\",\n    } as URLSearchParamsInit); // Remove submit flag from params\n  };\n  return <SendEditButton onEdit={onEdit} />;\n});\n\nconst Fiat = styled.span`\n  color: ${(props) => props.theme.darkGray};\n`;\n\ninterface ConfirmProps {\n  state: TransactionState;\n  price?: number;\n  balance?: string;\n  onSend: (seqNo: number) => void;\n}\n\nexport const ConfirmView: FC<ConfirmProps> = ({ state, price, onSend }) => {\n  const {\n    data: address,\n    error: addressError,\n    isFetching: isAddressFetching,\n  } = useTargetAddress(state.address);\n  const { data } = useEstimateTransaction(state, address);\n  const {\n    mutateAsync,\n    error: sendError,\n    isLoading: isSending,\n  } = useSendTransaction();\n  const track = useTransactionAnalytics();\n\n  const onConfirm = async () => {\n    if (!address) return;\n    track(state);\n    const seqNo = await mutateAsync({ address, state });\n    onSend(seqNo);\n  };\n\n  const inFiat = price\n    ? ` (USD ${fiatFees.format(parseFloat(state.amount) * price)}$)`\n    : \"\";\n\n  const isLoading = isAddressFetching || isSending;\n  const disabled = isLoading || addressError != null;\n\n  const wallet = useContext(WalletStateContext);\n\n  return (\n    <>\n      <EditButton />\n      <Body>\n        <AddressTransfer left={wallet.name} right={state.address} />\n        <TextLine>SENDING:</TextLine>\n        <TextLine>\n          <b>{state.amount} ION</b> <Fiat>{inFiat}</Fiat>\n        </TextLine>\n\n        <Fees estimation={data} />\n\n        {state.data && (\n          <CodeBlock\n            label={state.isEncrypt ? \"E2E Encrypted Message\" : \"Public Message\"}\n          >\n            {String(state.data)}\n          </CodeBlock>\n        )}\n\n        {addressError && <ErrorMessage>{addressError.message}</ErrorMessage>}\n        {sendError && <ErrorMessage>{sendError.message}</ErrorMessage>}\n\n        <Gap />\n\n        <ButtonRow>\n          <SendCancelButton disabled={isLoading} />\n          <ButtonPositive disabled={disabled} onClick={onConfirm}>\n            {isLoading ? (\n              <Dots>Loading</Dots>\n            ) : (\n              <FingerprintLabel>Confirm</FingerprintLabel>\n            )}\n          </ButtonPositive>\n        </ButtonRow>\n      </Body>\n    </>\n  );\n};\n","import { FC, useCallback, useContext, useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { TransactionState } from \"../../../../../libs/service/transfer/tonService\";\nimport {\n  Body,\n  ButtonBottomRow,\n  ButtonPositive,\n  Gap,\n  H1,\n} from \"../../../../components/Components\";\nimport { InputField } from \"../../../../components/InputField\";\nimport { SendCancelButton } from \"../../../../components/send/SendButtons\";\nimport { SendLoadingView } from \"../../../../components/send/SendLoadingView\";\nimport { SendSuccessView } from \"../../../../components/send/SendSuccessView\";\nimport { WalletAddressContext, WalletStateContext } from \"../../../../context\";\nimport { sendBackground } from \"../../../../event\";\nimport { formatTonValue } from \"../../../../utils\";\nimport { stateToSearch, toState } from \"./api\";\nimport { ConfirmView } from \"./ConfirmView\";\n\nconst MaxRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nconst MaxButton = styled.button`\n  color: ${(props) => props.theme.darkBlue};\n  text-decoration: underline;\n  cursor: pointer;\n  padding: 0 5px;\n  background: ${(props) => props.theme.background};\n  border: 0;\n  outline: 0;\n`;\n\ninterface Props {\n  price?: number;\n  balance?: string;\n}\n\ninterface InputProps {\n  balance?: string;\n  state: TransactionState;\n  onChange: (field: Partial<TransactionState>) => void;\n  onSend: () => void;\n}\n\nconst InputView: FC<InputProps> = ({ state, balance, onChange, onSend }) => {\n  const wallet = useContext(WalletStateContext);\n\n  const formatted = useMemo(() => {\n    return balance ? formatTonValue(balance) : \"-\";\n  }, [balance]);\n\n  return (\n    <Body>\n      <H1>Send ION</H1>\n\n      <InputField\n        label=\"Enter wallet address\"\n        value={state.address}\n        onChange={(e) => onChange({ address: e.target.value })}\n      />\n\n      <InputField\n        label=\"Amount\"\n        type=\"number\"\n        value={state.amount}\n        onChange={(e) => onChange({ amount: e.target.value, max: \"0\" })}\n      />\n      <MaxRow>\n        <MaxButton\n          onClick={() =>\n            onChange({\n              amount: balance ? formatTonValue(balance) : \"0\",\n              max: \"1\",\n            })\n          }\n        >\n          Max\n        </MaxButton>\n        {formatted} ION\n      </MaxRow>\n\n      <InputField\n        label=\"Comment (optional)\"\n        value={state.data as string}\n        onChange={(e) => onChange({ data: e.target.value })}\n      />\n\n      {!wallet.ledger && (\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={state.isEncrypt}\n            onChange={(e) =>\n              onChange({\n                isEncrypt: e.target.checked,\n              })\n            }\n          />\n          Encrypt\n        </label>\n      )}\n\n      <Gap />\n\n      <ButtonBottomRow>\n        <SendCancelButton />\n        <ButtonPositive onClick={onSend}>Next</ButtonPositive>\n      </ButtonBottomRow>\n    </Body>\n  );\n};\n\nexport const Send: FC<Props> = ({ price, balance }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const wallet = useContext(WalletStateContext);\n\n  const seqNo = searchParams.get(\"seqNo\");\n  const confirm = searchParams.get(\"confirm\");\n\n  const submit = searchParams.get(\"submit\") === \"1\";\n\n  const state = useMemo(() => {\n    return toState(searchParams);\n  }, [searchParams]);\n\n  const onSubmit = useCallback(() => {\n    const params = { ...stateToSearch(state), submit: \"1\" };\n\n    sendBackground.message(\"storeOperation\", {\n      kind: \"send\",\n      value: { wallet: wallet.address, params },\n    });\n\n    setSearchParams(params);\n  }, [setSearchParams, state]);\n\n  const onChange = useCallback(\n    (field: Partial<TransactionState>) => {\n      const params = stateToSearch({ ...state, ...field });\n\n      sendBackground.message(\"storeOperation\", {\n        kind: \"send\",\n        value: { wallet: wallet.address, params },\n      });\n\n      setSearchParams(params);\n    },\n    [setSearchParams, state]\n  );\n\n  const onSend = useCallback(\n    (seqNo: number) => {\n      const params = { seqNo: String(seqNo) };\n      sendBackground.message(\"storeOperation\", null);\n      setSearchParams(params);\n    },\n    [setSearchParams]\n  );\n\n  const onConfirm = useCallback(() => {\n    sendBackground.message(\"storeOperation\", null);\n\n    setSearchParams({ confirm: String(seqNo) });\n  }, [setSearchParams, seqNo]);\n\n  const address = useContext(WalletAddressContext);\n\n  if (confirm !== null) {\n    return <SendSuccessView address={address} />;\n  }\n\n  if (seqNo !== null) {\n    return (\n      <SendLoadingView address={address} seqNo={seqNo} onConfirm={onConfirm} />\n    );\n  }\n\n  if (!submit) {\n    return (\n      <InputView\n        state={state}\n        onChange={onChange}\n        onSend={onSubmit}\n        balance={balance}\n      />\n    );\n  }\n\n  return (\n    <ConfirmView\n      state={state}\n      balance={balance}\n      price={price}\n      onSend={onSend}\n    />\n  );\n};\n","import { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useContext } from \"react\";\nimport { AccountState } from \"../../../../../libs/entries/account\";\nimport {\n  getWalletAssets,\n  setWalletAssets,\n  WalletState,\n} from \"../../../../../libs/entries/wallet\";\nimport { getWalletAddress } from \"../../../../../libs/service/transfer/core\";\nimport { updateWalletAddress } from \"../../../../../libs/state/connectionSerivce\";\nimport {\n  getConnections,\n  setConnections,\n} from \"../../../../../libs/store/browserStore\";\nimport {\n  AccountStateContext,\n  NetworkContext,\n  WalletStateContext,\n} from \"../../../../context\";\nimport { saveAccountState } from \"../../../api\";\n\nexport const useDeleteWalletMutation = () => {\n  const account = useContext(AccountStateContext);\n  const network = useContext(NetworkContext);\n  const client = useQueryClient();\n  return useMutation<void, Error, void>(async () => {\n    const { activeWallet, wallets } = account;\n    if (wallets.length === 1) {\n      throw new Error(\"Deleting single account\");\n    }\n    const items = wallets.filter((w) => w.address !== activeWallet);\n    const value = {\n      ...account,\n      wallets: items,\n      activeWallet: items[0].address,\n    };\n    await saveAccountState(network, client, value);\n  });\n};\n\nexport const useUpdateWalletMutation = () => {\n  const account = useContext(AccountStateContext);\n  const network = useContext(NetworkContext);\n  const client = useQueryClient();\n\n  const wallet = useContext(WalletStateContext);\n\n  return useMutation<void, Error, Partial<WalletState>>(async (newFields) => {\n    // Migration assets to new field with version\n    const active = setWalletAssets(wallet, getWalletAssets(wallet));\n\n    let updatedWallet: WalletState = {\n      ...active,\n      ...newFields,\n    };\n    updatedWallet.address = getWalletAddress(updatedWallet, network);\n\n    let connections = await getConnections(network);\n\n    if (account.activeWallet) {\n      connections = updateWalletAddress(\n        connections,\n        account.activeWallet,\n        updatedWallet.address\n      );\n    }\n\n    const wallets = account.wallets.map((w) => {\n      if (w.address === account.activeWallet) {\n        return updatedWallet;\n      }\n      return w;\n    });\n\n    const value: AccountState = {\n      ...account,\n      wallets,\n      activeWallet: updatedWallet.address,\n    };\n\n    await saveAccountState(network, client, value);\n    await setConnections(connections, network);\n  });\n};\n","import { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  LedgerDriver,\n  LedgerState,\n  WalletState,\n} from \"../../../../../libs/entries/wallet\";\nimport {\n  Body,\n  ButtonDanger,\n  ButtonNegative,\n  H1,\n  Input,\n  SelectLabel,\n  SelectPayload,\n} from \"../../../../components/Components\";\nimport { Dots } from \"../../../../components/Dots\";\nimport { DropDownList } from \"../../../../components/DropDown\";\nimport { HomeButton } from \"../../../../components/HomeButton\";\nimport { ArrowDownIcon, DeleteIcon } from \"../../../../components/Icons\";\nimport { WalletStateContext } from \"../../../../context\";\nimport { relative } from \"../../../../routes\";\nimport {\n  useConnectLedgerDevice,\n  useLedgerDevice,\n  useUnPairLedgerDevice,\n} from \"../../../ledger/api\";\nimport { useUpdateWalletMutation } from \"./api\";\nimport { WalletRoutes } from \"./route\";\n\nconst drivers: LedgerDriver[] = [\"USB\", \"HID\"];\n\nconst DeviceSelect = () => {\n  const wallet = useContext(WalletStateContext);\n  const { data: device } = useLedgerDevice(wallet);\n  const { mutate: unpair, isLoading: isUnpairing } = useUnPairLedgerDevice(\n    wallet?.ledger?.driver\n  );\n\n  const { mutate: connect, isLoading: isConnecting } =\n    useConnectLedgerDevice(wallet);\n\n  if (device === undefined) return null;\n\n  if (device === null) {\n    return (\n      <>\n        <SelectLabel>Connect Device</SelectLabel>\n        <ButtonNegative onClick={() => connect()} disabled={isConnecting}>\n          {isConnecting ? <Dots>Loading</Dots> : \"Connect\"}\n        </ButtonNegative>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SelectLabel>\n        Connected Device: {device.productName}, ID: {device.productId}\n      </SelectLabel>\n      {/* <ButtonNegative onClick={() => unpair()} disabled={isUnpairing}>\n        {isUnpairing ? <Dots>Loading</Dots> : \"Unpair\"}\n      </ButtonNegative> */}\n    </>\n  );\n};\n\nexport const LedgerSettings = () => {\n  const navigate = useNavigate();\n\n  const wallet = useContext(WalletStateContext);\n\n  const [name, setName] = useState(wallet.name);\n\n  const { mutateAsync, reset } = useUpdateWalletMutation();\n  const onChange = async (fields: Partial<WalletState>) => {\n    reset();\n    await mutateAsync(fields);\n  };\n\n  const onChangeLedger = async (fields: Partial<LedgerState>) => {\n    const ledger: LedgerState = { ...wallet.ledger!, ...fields };\n\n    reset();\n    await mutateAsync({ ledger });\n  };\n\n  return (\n    <>\n      <HomeButton />\n      <Body>\n        <H1>Wallet Settings</H1>\n\n        <SelectLabel>Wallet Name</SelectLabel>\n        <Input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          onBlur={() => {\n            onChange({ name });\n          }}\n        />\n\n        <SelectLabel>Driver</SelectLabel>\n        <DropDownList\n          isLeft\n          options={drivers}\n          renderOption={(value) => value}\n          onSelect={(value) => onChangeLedger({ driver: value })}\n        >\n          <SelectPayload>\n            {wallet.ledger?.driver}\n            <ArrowDownIcon />\n          </SelectPayload>\n        </DropDownList>\n\n        <DeviceSelect />\n\n        <SelectLabel>Delete Wallet</SelectLabel>\n        <ButtonDanger onClick={() => navigate(relative(WalletRoutes.delete))}>\n          Delete Wallet <DeleteIcon />\n        </ButtonDanger>\n      </Body>\n    </>\n  );\n};\n","import { ALL } from \"@openproduct/web-sdk\";\nimport { useContext, useState } from \"react\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { WalletState, WalletVersion } from \"../../../../../libs/entries/wallet\";\nimport { decryptMnemonic } from \"../../../../../libs/state/accountService\";\nimport { getWebAuthnPassword } from \"../../../../api\";\nimport {\n  Body,\n  ButtonDanger,\n  ButtonNegative,\n  ButtonPositive,\n  ButtonRow,\n  ErrorMessage,\n  ErrorText,\n  Gap,\n  H1,\n  Input,\n  SelectLabel,\n  SelectPayload,\n} from \"../../../../components/Components\";\nimport { DropDownList } from \"../../../../components/DropDown\";\nimport { HomeButton } from \"../../../../components/HomeButton\";\nimport {\n  ArrowDownIcon,\n  DeleteIcon,\n  FingerprintIcon,\n} from \"../../../../components/Icons\";\nimport { WalletStateContext } from \"../../../../context\";\nimport { AppRoute, relative } from \"../../../../routes\";\nimport { useAuthConfiguration } from \"../../../settings/api\";\nimport { LedgerSettings } from \"./LedgerSettings\";\nimport { useDeleteWalletMutation, useUpdateWalletMutation } from \"./api\";\nimport { WalletRoutes } from \"./route\";\n\nconst Text = styled.div`\n  font-size: medium;\n  margin-top: ${(props) => props.theme.padding};\n`;\n\nconst MnemonicBlock = styled.div`\n  background-color: light-dark(rgba(239, 239, 239, 0.3), rgba(59, 59, 59, 0.3));\n  color: light-dark(rgb(84, 84, 84), rgb(170, 170, 170));\n  border-color: rgba(118, 118, 118, 0.3);\n  padding: 10px;\n  margin-bottom: 15px;\n  height: 100px;\n  border: 1px solid;\n`;\n\nconst SettingsIndex = () => {\n  const navigate = useNavigate();\n  const wallet = useContext(WalletStateContext);\n\n  const [name, setName] = useState(wallet.name);\n\n  const { mutateAsync, reset } = useUpdateWalletMutation();\n  const onChange = async (fields: Partial<WalletState>) => {\n    reset();\n    await mutateAsync(fields);\n  };\n\n  return (\n    <>\n      <HomeButton />\n      <Body>\n        <H1>Wallet Settings</H1>\n\n        <SelectLabel>Wallet Name</SelectLabel>\n        <Input\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          onBlur={() => {\n            onChange({ name });\n          }}\n        />\n\n        <SelectLabel>Version</SelectLabel>\n        <DropDownList\n          isLeft\n          options={Object.keys(ALL)}\n          renderOption={(value) => value}\n          onSelect={(version) =>\n            onChange({ version: version as WalletVersion })\n          }\n        >\n          <SelectPayload>\n            {wallet.version} <ArrowDownIcon />\n          </SelectPayload>\n        </DropDownList>\n\n        <SelectLabel>Reveal Secret Recovery Phrase</SelectLabel>\n        <ButtonDanger onClick={() => navigate(relative(WalletRoutes.mnemonic))}>\n          Reveal Secret Recovery Phrase\n        </ButtonDanger>\n\n        <SelectLabel>Delete Wallet</SelectLabel>\n        <ButtonDanger onClick={() => navigate(relative(WalletRoutes.delete))}>\n          Delete Wallet <DeleteIcon />\n        </ButtonDanger>\n      </Body>\n    </>\n  );\n};\n\nconst SettingsMnemonic = () => {\n  const navigate = useNavigate();\n\n  const wallet = useContext(WalletStateContext);\n\n  const [value, setValue] = useState(\"\");\n  const [mnemonic, setMnemonic] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const { data } = useAuthConfiguration();\n  const isWebAuth = data?.kind == \"webauthn\";\n\n  const isShow = mnemonic !== \"\";\n\n  const onNext = async () => {\n    if (isShow) return;\n\n    try {\n      if (isWebAuth) {\n        getWebAuthnPassword(async (password) => {\n          setMnemonic(await decryptMnemonic(wallet.mnemonic, password));\n        });\n      } else {\n        setMnemonic(await decryptMnemonic(wallet.mnemonic, value));\n      }\n    } catch (e) {\n      setError(true);\n    }\n  };\n\n  return (\n    <Body>\n      <H1>Secret Recovery Phrase</H1>\n      <Text>\n        If you ever change browsers or move computers, you will need this Secret\n        Recovery Phrase to access your wallet. Save them somewhere safe and\n        secret.\n      </Text>\n      <ErrorMessage>\n        DO NOT share this phrase with anyone! These words can be used to steal\n        your wallet.\n      </ErrorMessage>\n      {isShow ? (\n        <MnemonicBlock>{mnemonic}</MnemonicBlock>\n      ) : !isWebAuth ? (\n        <div>\n          <label>Enter password to continue</label>\n          <Input\n            type=\"password\"\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          {error && <ErrorText>Invalid Password</ErrorText>}\n        </div>\n      ) : undefined}\n\n      <Gap />\n      <ButtonRow>\n        <ButtonNegative onClick={() => navigate(AppRoute.wallet)}>\n          Cancel\n        </ButtonNegative>\n        <ButtonPositive onClick={onNext} disabled={isShow}>\n          Show {isWebAuth && <FingerprintIcon />}\n        </ButtonPositive>\n      </ButtonRow>\n    </Body>\n  );\n};\n\nconst SettingsDelete = () => {\n  const navigate = useNavigate();\n  const { mutateAsync, isLoading } = useDeleteWalletMutation();\n\n  const onDelete = async () => {\n    await mutateAsync();\n    navigate(AppRoute.home);\n  };\n\n  return (\n    <Body>\n      <H1>Delete Wallet</H1>\n      <Text>Deleting your wallet will clear all local stored data.</Text>\n      <Text>The wallet could be re-enter by Secret Recovery Phrase.</Text>\n      <Text>\n        ION Wallet team cannot recover your wallet Secret Recovery Phrase.\n      </Text>\n      <Gap />\n      <ButtonRow>\n        <ButtonNegative\n          onClick={() => navigate(AppRoute.wallet)}\n          disabled={isLoading}\n        >\n          Cancel\n        </ButtonNegative>\n        <ButtonPositive onClick={onDelete} disabled={isLoading}>\n          Delete\n        </ButtonPositive>\n      </ButtonRow>\n    </Body>\n  );\n};\n\nexport const WalletSettings = () => {\n  const wallet = useContext(WalletStateContext);\n\n  return (\n    <Routes>\n      <Route path={WalletRoutes.mnemonic} element={<SettingsMnemonic />} />\n      <Route path={WalletRoutes.delete} element={<SettingsDelete />} />\n      <Route\n        path={WalletRoutes.index}\n        element={wallet.ledger ? <LedgerSettings /> : <SettingsIndex />}\n      />\n    </Routes>\n  );\n};\n","import { useContext } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useNonBounceableAddress } from \"../../../libs/address\";\nimport { WalletAddressContext, WalletStateContext } from \"../../context\";\nimport { AppRoute, any } from \"../../routes\";\nimport { useBalance, useCoinPrice, useDexStock } from \"./api\";\nimport { WalletHome, WalletInfo } from \"./wallet/Wallet\";\nimport { AssetsRouter } from \"./wallet/assets/Assets\";\nimport { ReceiveRouter, ReceiveTonPage } from \"./wallet/receive/Receive\";\nimport { SwapRouter } from \"./wallet/receive/Swap\";\nimport { Send } from \"./wallet/send/Send\";\nimport { WalletSettings } from \"./wallet/setttings/Settings\";\n\nconst Body = styled.div`\n  width: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nexport const Home = () => {\n  const wallet = useContext(WalletStateContext);\n\n  const { data: balance } = useBalance(wallet.address);\n  const { data: price } = useCoinPrice(balance != null);\n  const { data: stocks } = useDexStock(balance != null);\n\n  const address = useNonBounceableAddress(wallet.address);\n  return (\n    <WalletAddressContext.Provider value={address}>\n      <Body>\n        <WalletInfo />\n        <Routes>\n          <Route\n            path={any(AppRoute.send)}\n            element={<Send price={price} balance={balance} />}\n          />\n          <Route path={any(AppRoute.swap)} element={<SwapRouter />} />\n          <Route path={any(AppRoute.receive)} element={<ReceiveTonPage />} />\n          <Route path={any(AppRoute.buy)} element={<ReceiveRouter />} />\n          <Route path={any(AppRoute.wallet)} element={<WalletSettings />} />\n          <Route path={any(AppRoute.assets)} element={<AssetsRouter />} />\n          <Route\n            path=\"*\"\n            element={\n              <WalletHome price={price} balance={balance} stocks={stocks} />\n            }\n          />\n        </Routes>\n      </Body>\n    </WalletAddressContext.Provider>\n  );\n};\n\nexport default Home;\n"],"names":["useConnections","network","useContext","NetworkContext","useQuery","QueryType","getNetworkStoreValue","defaultConnections","useDisconnectMutation","connections","client","useQueryClient","useMutation","origin","wallet","revokeDAppAccess","setConnections","invalidateQueries","ReceiveRoutes","useNonBounceableAddress","address","useNetwork","data","useMemo","Address","toString","urlSafe","bounceable","testOnly","Connect","styled","Badge","props","theme","padding","Dot","isConnected","css","ConnectBadge","navigate","useNavigate","tab","useActiveTabs","url","URL","onClick","AppRoute","Block","Item","lightGray","active","blue","Tabs","React","options","onChange","map","item","Column","Text","ActionIcon","Icon","background","BallanceBlock","Container","BallanceButtonRow","BallanceButton","label","children","Price","lightColor","Fiat","balance","price","value","useTonFiat","NetworkLogo","Amount","Balance","formatted","formatTonValue","src","alt","width","height","Menu","WalletMenu","config","useSelectedNetworkConfig","location","useLocation","DropDown","payload","onClose","ExtensionPlatform","scanUrl","pathname","search","gray","WalletName","name","useCopyToClipboard","copied","handleCopy","toShortAddress","Row","Image","First","darkGray","Line","ActivityMessage","CommentLabel","Comment","decodeText","TextDecoder","decode","base64ToBytes","CommentBlock","msg","msg_data","openmask_decrypted_payload","text","hasComment","encrypted","TransactionOut","out","destination","Date","utime","toLocaleString","body_hash","TransactionIn","in_msg","source","Transaction","out_msgs","ActivitiesList","isLoading","transaction_id","hash","decryptMessageV1","cell","sharedKey","slice","beginParse","buffer","loadBuffer","remainingBits","decryptMessage","length","nacl","nonce","message","decrypted","Uint8Array","encodeBase64","undefined","decryptOutMessage","keyPair","outMessage","track","getWalletPublicKey","senderPublicKey","getSharedSecret","Buffer","from","secretKey","Cell","body","decryptInMessage","inMessage","tryToDecrypt","transaction","Promise","all","catch","decryptedOutMessages","Activities","WalletStateContext","useState","txs","setTxs","limit","ton","TonProviderContext","getTransactions","useTransactions","transactions","useEffect","TonClientContext","useDecryptAnalytics","getWalletKeyPair","result","push","useDecryptMutation","mutateAsync","isDecrypting","onDecrypt","ledger","Dots","FingerprintLabel","pointer","ImageBlock","ImageIcon","Forward","Round","AssetJettonView","decimals","amount","BigNumber","balanceFormat","formatDecimals","fiat","fiatFormat","multipliedBy","AssetItemView","logo","logoUrl","stocks","onShow","fiatTitle","dex","ipfsProxy","title","getJettonWalletAddress","provider","jetton","account","walletAddress","minter","JettonMinterDao","minterAddress","activeWallet","Error","jettonWalletAddress","wallets","assets","getWalletAssets","asset","setWalletAssets","saveAccountState","useJettonWalletBalance","AccountStateContext","dao","JettonWalletDao","getData","JettonRowView","tonPrice","jettonStocks","stockD","dedust","stockS","ston","e","console","error","stock","toNumber","state","symbol","image","parseInt","AssetRoutes","encodeURIComponent","NftRowView","items","find","collection","collectionAddress","AssetsList","importedJetton","setImportedJetton","baseAssets","some","a","seeIfJettonAsset","useJettonFullData","jettonFullDataAsync","reset","useAddJettonMutation","addJettonAsync","fetchData","jettonWallet","jettonState","then","WalletInfo","tabs","WalletHome","useCallback","replace","path","element","AssetsTabs","includes","toSymbolError","toDecimalsError","Number","ImportJetton","setJetton","jettonName","setJettonName","setJettonWallet","setMinter","setSymbol","symbolError","setSymbolError","setDecimals","decimalsError","setDecimalsError","isDataLoading","errorMinter","resetFullData","isAddLoading","resetAdd","errorAdd","onSearch","onAdd","error2","toUpperCase","Button","disabled","HomeButton","InputField","target","onBlur","type","JettonRow","ImportNft","nftData","setNftData","nftState","setNftState","nftCollectionState","setNftCollectionState","setAddress","useNftDataMutation","nftDataAsync","nftDataError","useNftContentMutation","nftStateAsync","nftStateError","isStateLoading","useNftCollectionDataMutation","nftCollectionStateAsync","isCollectionLoading","useDomainNftMutation","domainNftStateAsync","domainNftError","isDomainLoading","useAddNftMutation","addNftAsync","addNftError","isOwnNft","ownerAddress","nftItemState","nftAddress","NftPayload","StealthEX","viewBox","fill","xmlns","d","fillRule","clipRule","opacity","Dedust","stroke","Body","WalletRoutes","Source","SubTitle","H3","ChangeHero","ReceiveIndex","process","REACT_APP_STEALTHEX_ID","REACT_APP_CHANGEHERO","TextRow","AddressRow","Title","H1","ReceiveCoin","WalletAddressContext","size","formatTransferUrl","ReceiveTonPage","ReceiveRouter","index","JettonMinterAddressContext","JettonStateContext","JettonHide","jettonMinterAddress","deleteJettonAsset","useHideJettonMutation","onDelete","JettonWrapper","JettonBalance","formatAmountValue","relative","JettonRoute","JettonActivities","enabled","useJettonTransactions","JettonInfo","AddressBlock","JettonHome","SendCancelButton","transactionId","homeRoute","sendBackground","SendEditButton","onEdit","SendLoadingView","seqNo","onConfirm","askBackground","SendSuccessView","toSendJettonState","searchParams","decodeURIComponent","get","transactionAmount","comment","stateToSearch","Object","entries","reduce","acc","key","tonClient","jettonMinter","callGetMethod","beginCell","storeAddress","endCell","stack","readAddress","getJettonMasterAddress","jettonData","readBigNumber","jettonMaster","sendLedgerTransaction","contract","getWalletContract","tonContract","open","getBalance","walletBalance","checkBalanceOrDie2","toNano","jettonAmount","toCoinValue","getSeqno","seqno","createLedgerJettonTransfer","signLedgerTransaction","signed","send","sendMnemonicTransaction","createJettonTransfer","EditButton","useSearchParams","setSearchParams","Quote","SendJettonConfirm","onSend","useTargetAddress","addressError","isAddressFetching","isFetching","useJettonWalletAddress","jettonError","isJettonFetching","estimateExternalMessageFee","initCode","initData","ignoreSignature","source_fees","useEstimateJettonFee","useSendJetton","isSending","sendError","parseFloat","left","right","Fees","estimation","fiatFees","SendJettonInputView","JettonSend","confirm","submit","onSubmit","params","kind","field","String","ReceiveJetton","JettonRouter","useParams","Provider","NftStateContext","NftItemStateContext","useHideNftMutation","deleteNftAsset","NftHide","NftActivities","useNFtTransactions","NftHeader","nft","NftItemRoute","NftInfo","NftHome","Grid","ItemImage","TextLine","NftList","domain","root","toSendNftState","forwardAmount","checkBalanceOrDie","createLedgerNftTransfer","createNftTransfer","SendNftConfirm","useEstimateNftFee","useSendNft","SuccessView","hideNftMutationAsync","onHide","SendNftInputView","NftSend","useBalance","ReceiveNft","NftItemRouter","itemAddress","NftRouter","AssetsRouter","SwapIndex","SwapRouter","toState","isEncrypt","ConfirmView","useEstimateTransaction","useSendTransaction","useTransactionAnalytics","inFiat","CodeBlock","MaxRow","MaxButton","darkBlue","InputView","max","checked","Send","useUpdateWalletMutation","newFields","updatedWallet","getWalletAddress","getConnections","updateWalletAddress","w","drivers","DeviceSelect","device","useLedgerDevice","useUnPairLedgerDevice","driver","mutate","useConnectLedgerDevice","connect","isConnecting","productName","productId","LedgerSettings","setName","fields","onChangeLedger","isLeft","renderOption","onSelect","MnemonicBlock","SettingsIndex","keys","ALL","version","mnemonic","SettingsMnemonic","setValue","setMnemonic","setError","useAuthConfiguration","isWebAuth","isShow","onNext","getWebAuthnPassword","password","decryptMnemonic","SettingsDelete","filter","useDeleteWalletMutation","WalletSettings","Home","useCoinPrice","useDexStock","any"],"sourceRoot":""}